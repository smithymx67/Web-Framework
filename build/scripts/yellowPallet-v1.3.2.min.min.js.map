{"version":3,"sources":["analogueClock.js","consoleLogging.js","dateTime.js","dateTimePicker.js","elementSelector.js","footerScripts.js","gallery.js","headerScripts.js","slideshow.js"],"names":["analogueClock","clockArgsArray","clockCounter","create","args","clockRotationCounterArray","hourRotationCounter","minuteRotationCounter","clockID","clockArgsIndex","clockHolder","elem","clockFace","createElement","clockHands","clockFaceMajorMarkers","document","clockFaceMinorMarkers","clockHandPoint","clockHandHour","clockHandMinute","clockHandSecond","handPointSpan","handHourSpan","handMinSpan","classList","add","majorFaceMarker","i","markerSpan","innerHTML","clientWidth","appendChild","minorFaceMarker","tickStyle","renderAnalogueClock","buildAnalogueClock","console","log","secondHand","secDegree","Date","theMinutes","theHours","theSeconds","utcOffset","plusMinus","slice","hourOffset","minuteOffset","theDate","getUTCMinutes","getUTCSeconds","parseInt","getSeconds","getMinutes","minutes","seconds","date","minDegree","hourDegree","hours","secondRotationCounter","style","transform","minuteHand","hourHand","setTimeout","consoleLog","message","normal","info","success","warning","danger","dateTime","textifyMonth","month","textifyWeekDay","day","number","suffixDate","get12HrTime","dateObj","showSecs","showAMPM","theTime","getHours","mins","leadZero","secs","ampm","get24HrTime","getDate","getMonth","getShortDate","getLongDate","getDay","dateTimePicker","currentMonth","currentYear","currentMode","yearRangeMax","selectedTimeMin","selectedDate","selectedTimeHour","pickerCurrentPicker","pickerCurrentValue","pickerCounter","selectedYear","mode","dateInputID","pickerRootParentArray","dateInputElem","getElementsByTagName","theInput","pickerID","pickerModeArray","dateInputContentContainer","dateTimePopup","dateTimeSelector","dateTimeSelectorPreview","dateTimeSelectorContent","dateTimeCurrentDate","generateDateTimeModule_container","className","id","getElementsByClassName","generateDateTimeModule_calender","generateDateTimeModule_time","dateTimeButtonsCancel","dateTimeButtonsClear","dateTimeButtonsOk","setAttribute","dateTimeCalenderMonths","dateTimeButtons","dateTimeCalenderNavIncrement","decrementSpan","headerSpan","incrementSpan","yearsTable","monthsTable","datesTable","dateTimeCalender","dateTimeCalenderNav","dateTimeCalenderYears","dateTimeCalenderNavHeader","dateTimeCalenderNavDecrement","datesTableHeader","monthsArray","weekdayArray","dateTimeCalenderDates","j","yearsTableRowCol","monthsTableRowCol","monthsCounter","yearsTableRow","monthsTableRow","datesTableRow","datesTableRowCol","datesTableHeaderCol","dateTimeTimeMinDecrement","dateTimeTimeMinIncrement","dateTimeTime","dateTimeTimeHour","dateTimeTimeMin","dateTimeTimeSeperator","dateTimeTimeHourIncrement","dateTimeTimeHourDecrement","dateTimeTimeHourValue","dateTimeTimeMinValue","pickerCurrentPickerID","theValue","thePicker","remove","initialDate","close","pickerMonth","split","pickerYear","initialise","replace","getFullYear","selectedDay","selectedMonth","yearRangeMin","renderDaysCal","updateCurrentDateTime","updateTimeSelector","showHideCalsForMode","currentDateElem","hour","min","year","display","today","firstWeekDay","currentCalGridElem","rowCounter","colCounter","daysInMonth","monthDayCounter","getTimeMinElem","renderMonthsCal","hourMin","getDaysInMonth","renderYearsCal","yearCounter","dateModeHeader","currentCoords","hideMonthsCal","hideYearsCal","decrementCal","decrementcurrentYear","incrementCal","incrementCurrentYear","show","value","showYearsCal","set","incrementTime","decrementTime","selectCalDate","theDay","selectCalMonth","theMonth","selectCalYear","theYear","changeCalMode","element","theElement","substring","getElementById","window","addEventListener","footer","fixifyFooter","length","offset","clientHeight","marginBottom","stickifyFooter","contains","paddingBottom","minHeight","position","gallery","showImage","imgElem","overlayElem","src","body","overflow","hideImage","imgClasses","imgContainerClasses","spinner","images","galleryID","galleryElem","galleryOverlay","galleryOverlayImg","onclick","_loop","galleryImage","galleryImgContainer","spinnerHolder","spinnerContent","onload","_loop2","children","header","fixifyHeader","marginTop","slideshow","slideshowArray","slideshowElement","interval","control","pauseOnHover","slideshowObj","numberOfSlides","imageArray","currentSlide","counter","loop","hovered","setupSlides","arrowDiv","arrowNext","arrowPrevious","dotDiv","slideshowID","setupArrowNav","setupDotNav","dotItem","slideNumber","previousCounter","clearTimeout","nextSlide","newSlide","gotoSlide","nSlide","transitionSlide","cSlide","updateDotNav","slide","onmouseover","onmouseout","slideIdPrefix","classes","slidesDiv","img","usrCommand","currentActive","dot1","dot2","previousSlide","currentCounter"],"mappings":"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","file":"yellowPallet-v1.3.2.min.min.js","sourcesContent":["var analogueClock = (function() {\n  // Clock variables\n  var clockCounter                = 0;\n  var clockArgsArray              = [];\n  var clockRotationCounterArray   = [];\n\n  // Function to create a new analogue clock\n  function create(args) {\n    // Add and setup clock information in storage arrays\n    clockArgsArray[clockCounter] = args;\n    clockRotationCounterArray[clockCounter] = {\n      hourRotationCounter: 0,\n      minuteRotationCounter: 0,\n      secondRotationCounter: 0\n    }\n\n    // Check that the clockID was given\n    if(args.clockID) {\n      buildAnalogueClock(clockCounter);\n      renderAnalogueClock(clockCounter);\n    } else {\n      console.log(\"Analogue clock error - clockID required\");\n    }\n\n    // Increment the clock counter\n    clockCounter++;\n  }\n\n  // Function to generate the HTML elements required for the clock\n  function buildAnalogueClock(clockArgsIndex) {\n    // Variables to hold the clock elements\n    var clockHolder             = elem(\"#\" + clockArgsArray[clockArgsIndex].clockID)\n    var clockFace               = document.createElement(\"div\");\n    var clockHands              = document.createElement(\"div\");\n    var clockFaceMajorMarkers   = document.createElement(\"div\");\n    var clockFaceMinorMarkers   = document.createElement(\"div\");\n    var clockHandPoint          = document.createElement(\"div\");\n    var clockHandHour           = document.createElement(\"div\");\n    var clockHandMinute         = document.createElement(\"div\");\n    var clockHandSecond         = document.createElement(\"div\");\n    var handPointSpan           = document.createElement(\"span\");\n    var handHourSpan            = document.createElement(\"span\");\n    var handMinSpan             = document.createElement(\"span\");\n    var handSecSpan             = document.createElement(\"span\");\n\n    // Add classes to the clock face and hand div elements\n    clockFace.classList.add(\"clock-face\");\n    clockHands.classList.add(\"clock-hands\");\n    clockFaceMajorMarkers.classList.add(\"clock-face-markers\");\n    clockFaceMinorMarkers.classList.add(\"clock-face-markers\");\n\n    // Create the major markers on the clock face - hour markers\n    for(var i = 0; i < 12; i++) {\n      var majorFaceMarker   = document.createElement(\"div\");\n      var markerSpan        = document.createElement(\"span\");\n\n      // If the clock face style wants numbers\n      if(clockArgsArray[clockArgsIndex].clockFace == \"numbers\") {\n        majorFaceMarker.classList.add(\"clock-face-numbers\");\n\n        // Scale the numbers based on the clock width\n        markerSpan.style.fontSize = clockHolder.clientWidth / 8 + \"px\";\n\n        if(i == 0) {\n          markerSpan.innerHTML = \"12\";\n        } else {\n          markerSpan.innerHTML = i;\n        }\n      } else {\n        majorFaceMarker.classList.add(\"clock-face-major-marker\");\n      }\n\n      // Add the elements to the parent elements\n      majorFaceMarker.appendChild(markerSpan);\n      clockFaceMajorMarkers.appendChild(majorFaceMarker);\n    }\n\n    // If no clock face was defined\n    if(!clockArgsArray[clockArgsIndex].clockFace) {\n      // Create the minor markers on the clock face - minute markers\n      for(var i = 0; i < 48; i++) {\n        var minorFaceMarker   = document.createElement(\"div\");\n        var markerSpan        = document.createElement(\"span\");\n\n        // Add classes and add the elements to the parent elements\n        minorFaceMarker.classList.add(\"clock-face-minor-marker\");\n        minorFaceMarker.appendChild(markerSpan);\n        clockFaceMinorMarkers.appendChild(minorFaceMarker);\n      }\n    }\n\n    // Add classes to the hand elements\n    clockHandPoint.classList.add(\"clock-hand-point\");\n    clockHandHour.classList.add(\"clock-hand-hour\");\n    clockHandMinute.classList.add(\"clock-hand-minute\");\n    clockHandSecond.classList.add(\"clock-hand-second\");\n\n    // Setup the chosen tick style if one was defined\n    switch(clockArgsArray[clockArgsIndex].tickStyle) {\n      case \"smooth\":\n        clockHandHour.classList.add(\"smooth-tick\");\n        clockHandMinute.classList.add(\"smooth-tick\");\n        clockHandSecond.classList.add(\"smooth-tick\");\n        break;\n      case \"bounce\":\n        clockHandHour.classList.add(\"bounce-tick\");\n        clockHandMinute.classList.add(\"bounce-tick\");\n        clockHandSecond.classList.add(\"bounce-tick\");\n        break;\n    }\n\n    // Add IDs to the clock hands\n    clockHandHour.id    = clockArgsArray[clockArgsIndex].clockID + \"-hour-hand\";\n    clockHandMinute.id  = clockArgsArray[clockArgsIndex].clockID + \"-minute-hand\";\n    clockHandSecond.id  = clockArgsArray[clockArgsIndex].clockID + \"-second-hand\";\n\n    // Add the elements to their parent elements\n    clockFace.appendChild(clockFaceMajorMarkers);\n    clockFace.appendChild(clockFaceMinorMarkers);\n    clockHandPoint.appendChild(handPointSpan);\n    clockHandHour.appendChild(handHourSpan);\n    clockHandMinute.appendChild(handMinSpan);\n    clockHandSecond.appendChild(handSecSpan);\n    clockHands.appendChild(clockHandPoint);\n    clockHands.appendChild(clockHandHour);\n    clockHands.appendChild(clockHandMinute);\n    clockHands.appendChild(clockHandSecond);\n    clockHolder.appendChild(clockFace);\n    clockHolder.appendChild(clockHands);\n  }\n\n  // Render the clock and make it tick\n  function renderAnalogueClock(clockArgsIndex) {\n    // Get the elements for the clock hands\n    var date        = getClockTime(clockArgsIndex);\n    var hourHand    = elem(\"#\" + clockArgsArray[clockArgsIndex].clockID + \"-hour-hand\");\n    var minuteHand  = elem(\"#\" + clockArgsArray[clockArgsIndex].clockID + \"-minute-hand\");\n    var secondHand  = elem(\"#\" + clockArgsArray[clockArgsIndex].clockID + \"-second-hand\");\n\n    // Set the degree of rotation for the hands\n    var secDegree   = (date.seconds / 60) * 360;\n    var minDegree   = ((date.minutes / 60) * 360) + ((date.seconds / 60) * 6);\n    var hourDegree  = ((date.hours / 12) * 360) + ((date.minutes / 60) * 30) + (date.seconds / 60 * 0.5);\n\n    // Track how many times the hand has rotated\n    if(hourDegree == 0) {clockRotationCounterArray[clockArgsIndex].hourRotationCounter++}\n    if(minDegree == 0)  {clockRotationCounterArray[clockArgsIndex].minuteRotationCounter++}\n    if(secDegree == 0)  {clockRotationCounterArray[clockArgsIndex].secondRotationCounter++}\n\n    // Add the number of previous rotations to the clock hands\n    hourDegree  += clockRotationCounterArray[clockArgsIndex].hourRotationCounter * 720;\n    minDegree   += clockRotationCounterArray[clockArgsIndex].minuteRotationCounter * 360;\n    secDegree   += clockRotationCounterArray[clockArgsIndex].secondRotationCounter * 360;\n\n    // Rotate the hands\n    secondHand.style.transform  = \"rotate(\" + secDegree + \"deg)\";\n    minuteHand.style.transform  = \"rotate(\" + minDegree + \"deg)\";\n    hourHand.style.transform    = \"rotate(\" + hourDegree + \"deg)\";\n\n    // Recall the function after a second\n    setTimeout(renderAnalogueClock, 1000, clockArgsIndex);\n  }\n\n  // Get the time to display on the clock\n  function getClockTime(clockArgsIndex) {\n    var theDate = new Date();\n    var theHours, theMinutes, theSeconds = 0;\n\n    // Offset the time if required\n    if(clockArgsArray[clockArgsIndex].utcOffset) {\n      // Slice up the offset string into its components\n      var plusMinus     = clockArgsArray[clockArgsIndex].utcOffset.slice(0, 1);\n      var hourOffset    = clockArgsArray[clockArgsIndex].utcOffset.slice(1, 3);\n      var minuteOffset  = clockArgsArray[clockArgsIndex].utcOffset.slice(4, 6);\n\n      // Get the current UTC time\n      theHours    = theDate.getUTCHours();\n      theMinutes  = theDate.getUTCMinutes();\n      theSeconds  = theDate.getUTCSeconds();\n\n      // Add or minus time depending on the offset\n      if(plusMinus == \"+\") {\n        theHours    += parseInt(hourOffset);\n        theMinutes  += parseInt(minuteOffset);\n      } else if(plusMinus == \"-\") {\n        theHours    -= parseInt(hourOffset);\n        theMinutes  -= parseInt(minuteOffset);\n      } else {\n        console.log(\"Invalid offset operator - +/- only\");\n      }\n    } else {\n      // Get the current system time\n      theHours    = theDate.getHours();\n      theMinutes  = theDate.getMinutes();\n      theSeconds  = theDate.getSeconds();\n    }\n\n    // Return the time values\n    return {\n      hours   : theHours,\n      minutes : theMinutes,\n      seconds : theSeconds\n    };\n  }\n\n  // Expose public functions\n  return {\n    create: function(args) {return create(args)}\n  }\n})();\n","var consoleLog = (function () {\n  function normal (message)   {console.log(message);}\n  function info (message)     {console.log(\"%c\" + message, \"color: blue\");}\n  function success (message)  {console.log(\"%c\" + message, \"color: green\");}\n  function warning (message)  {console.log(\"%c\" + message, \"color: orange\");}\n  function danger (message)   {console.log(\"%c\" + message, \"color: red\");}\n\n  return {\n    normal:   function (message)  { return normal(message) },\n    info:     function (message)  { return info(message) },\n    success:  function (message)  { return success(message) },\n    warning:  function (message)  { return warning(message) },\n    danger:   function (message)  { return danger(message) }\n  }\n}) ();","////////////////////////////////////////////////////////////////\n// Date Time Functions                                        //\n////////////////////////////////////////////////////////////////\n\nvar dateTime = (function () {\n  /**\n   * Convert the month number into text\n   * @param  {number} month\n   * @return {string}\n   **/\n  function textifyMonth(month) {\n    var months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n    return months[month];\n  }\n\n  /**\n   * Convert the day number into text\n   * @param  {number} day\n   * @return {string}\n   **/\n  function textifyWeekDay(day) {\n    var days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ];\n    return days[day];\n  }\n\n  /**\n   * Returns the time in 12hr format\n   * @param  {Date}        dateObj\n   * @param  {boolean}     showSecs\n   * @param  {boolean}     showAMPM\n   * @return {string}      theTime\n   **/\n  function get12HrTime(dateObj, showSecs, showAMPM) {\n    var hours = (dateObj.getHours() > 12) ? dateObj.getHours() - 12 : dateObj.getHours();\n    var mins = leadZero(dateObj.getMinutes());\n    var secs = leadZero(dateObj.getSeconds());\n    var ampm = (dateObj.getHours() > 12) ? \"PM\" : \"AM\";\n    var theTime;\n\n    theTime = hours + \":\" + mins;\n    if(showSecs === true) {theTime += \":\" + secs}\n    if(showAMPM === true) {theTime += \" \" + ampm}\n    return theTime;\n  }\n\n  /**\n   * Returns the time in 24hr format\n   * @param  {Date}        dateObj\n   * @param  {boolean}     showSecs\n   * @return {string}      theTime\n   **/\n  function get24HrTime(dateObj, showSecs) {\n    var hours = leadZero(dateObj.getHours());\n    var mins = leadZero(dateObj.getMinutes());\n    var secs = leadZero(dateObj.getSeconds());\n    var theTime;\n\n    theTime = hours + \":\" + mins;\n    if(showSecs === true) {theTime += \":\" + secs}\n    return theTime;\n  }\n\n  /**\n   * Add a leading zero is needed\n   * @param  {number} number\n   * @return {string}\n   **/\n  function leadZero(number) {\n    return (number < 10) ? \"0\" + number : number;\n  }\n\n  /**\n   * Returns the date in the format DD/MM/YYYY\n   * @param  {Date}    dateObj\n   * @return {string}\n   **/\n  function getShortDate(dateObj) {\n    var date = leadZero(dateObj.getDate());\n    var month = leadZero(dateObj.getMonth() + 1);\n    var year = dateObj.getFullYear();\n    return date + \"/\" + month + \"/\" + year;\n  }\n\n  /**\n   * Return the date in the format Day Date Month Year\n   * @param  {Date}    dateObj\n   * @return {string}\n   **/\n  function getLongDate(dateObj) {\n    var day = textifyWeekDay(dateObj.getDay());\n    var date = suffixDate(dateObj.getDate());\n    var month = textifyMonth(dateObj.getMonth());\n    var year = dateObj.getFullYear();\n    return day + \" \" + date + \" \" + month + \" \" + year;\n  }\n\n  /**\n   * Add a suffix to the date\n   * @param  {number} date\n   * @return {string} theDate\n   **/\n  function suffixDate(date) {\n    var theDate;\n    switch(date) {\n      case 1:\n      case 21:\n      case 31:\n        theDate = date + \"st\";\n        break;\n      case 2:\n      case 22:\n      case 32:\n        theDate = date + \"nd\";\n        break;\n      case 3:\n      case 23:\n        theDate = date + \"rd\";\n        break;\n      default:\n        theDate = date + \"th\";\n    }\n    return theDate;\n  }\n\n  return {\n    textifyMonth:     function (month)                              { return textifyMonth(month) },\n    textifyWeekDay:   function (day)                                { return textifyWeekDay(day) },\n    get12HrTime:      function (dateObj, showSecs, showAMPM)        {  return get12HrTime(dateObj, showSecs, showAMPM) },\n    get24HrTime:      function (dateObj, showSecs)                  { return get24HrTime(dateObj, showSecs) },\n    leadZero:         function (number)                             { return leadZero(number) },\n    getShortDate:     function (dateObj)                            { return getShortDate(dateObj) },\n    getLongDate:      function (dateObj)                            { return getLongDate(dateObj) },\n    suffixDate:       function (date)                               { return suffixDate(date) }\n  }\n}) ();\n\n////////////////////////////////////////////////////////////////","/** Script to create a date / time picker **/\nvar dateTimePicker = (function() {\n  /*\n    ########################\n    GLOBAL VARIABLES - START\n    ########################\n  */\n  /** Variables used in the render process **/\n  var currentMonth,\n      currentYear,\n      currentMode,\n      yearRangeMin,\n      yearRangeMax,\n\n      /** Variables used to track the user selected date / time **/\n      selectedTimeHour,\n      selectedTimeMin,\n      selectedDate,\n      selectedDay,\n      selectedMonth,\n      selectedYear,\n\n      /** Variables used to store meta data about date / time pickers **/\n      pickerCounter = 0,\n      pickerCurrentPicker,\n      pickerCurrentValue,\n      pickerCurrentPickerID,\n      pickerRootParentArray = [],\n      pickerModeArray = [];\n  /*\n    ######################\n    GLOBAL VARIABLES - END\n    ######################\n  */\n\n  /*\n    ##################################\n    DATE / TIME PICKER BUILDER - START\n    ##################################\n  */\n  /** Create a new date / time picker based on the args given **/\n  function create(args) {\n    if(args.mode && args.dateInputID) {\n      // Increment the picker counter and store the pickers root element ID\n      pickerCounter++;\n      pickerRootParentArray[pickerCounter] = args.dateInputID;\n\n      // Initial setup for picker elements before generation of dialog\n      var dateInputElem   = elem(args.dateInputID),\n          pickerID        = \"dateTimePickerFor_\" + pickerCounter,\n          theInput        = dateInputElem.getElementsByTagName(\"input\")[0];\n\n      theInput.setAttribute(\"onClick\", \"dateTimePicker.show(\" + pickerCounter + \", this.value)\");\n      theInput.setAttribute(\"readonly\", \"readonly\");\n      pickerModeArray[pickerCounter] = args.mode;\n      generateInterface(args.dateInputID, pickerID, args.mode);\n    } else {\n      console.log(\"Date Time Picker - Missing required args\");\n    }\n  }\n\n  /** Generate the dialog based on the requested mode **/\n  function generateInterface(dateInputID, pickerID, mode) {\n    var dateInputElem = elem(dateInputID),\n        dateInputContentContainer;\n\n    // Create and append a container to the input element to hold the interface\n    dateInputElem.appendChild(generateDateTimeModule_container(pickerID));\n    dateInputContentContainer = dateInputElem.getElementsByClassName(\"datetime-selector-content\")[0];\n\n    // Decide on what to show in the interface\n    switch(mode) {\n      case \"datetime\":\n        dateInputContentContainer.appendChild(generateDateTimeModule_calender());\n        dateInputContentContainer.appendChild(generateDateTimeModule_time());\n        break;\n      case \"date\":\n        dateInputContentContainer.appendChild(generateDateTimeModule_calender());\n        break;\n      case \"month\":\n        dateInputContentContainer.appendChild(generateDateTimeModule_calender());\n        break;\n      case \"time\":\n        dateInputContentContainer.appendChild(generateDateTimeModule_time());\n        break;\n    }\n\n    // Append the control buttons to the end of the container\n    dateInputContentContainer.appendChild(generateDateTimeModule_buttons());\n  }\n\n  /** Generate the interface container **/\n  function generateDateTimeModule_container(pickerID) {\n    // Create the container elements\n    var dateTimePopup               = document.createElement(\"div\"),\n        dateTimeSelector            = document.createElement(\"div\"),\n        dateTimeSelectorPreview     = document.createElement(\"div\"),\n        dateTimeSelectorContent     = document.createElement(\"div\"),\n        dateTimeCurrentDate         = document.createElement(\"p\");\n\n    // Assign classes to the selector element based on the mode requested\n    switch(pickerModeArray[pickerCounter]) {\n      case \"datetime\":  dateTimeSelector.className = \"datetime-selector width-6 width-xl-10\"; break;\n      case \"date\":      dateTimeSelector.className = \"datetime-selector width-4 width-xl-8 width-m-10\"; break;\n      case \"month\":     dateTimeSelector.className = \"datetime-selector width-4 width-xl-8 width-m-10\"; break;\n      case \"time\":      dateTimeSelector.className = \"datetime-selector width-3 width-xl-6 width-m-10\"; break;\n    }\n\n    // Assign classes and id's to the other elements\n    dateTimePopup.className             = \"datetime-popup\";\n    dateTimeSelectorPreview.className   = \"col-12 center-align datetime-selector-preview\";\n    dateTimeSelectorContent.className   = \"col-12 datetime-selector-content\";\n    dateTimeCurrentDate.id              = \"datetime-selector-current-date_\" + pickerCounter;\n    dateTimePopup.id                    = pickerID;\n\n    // Append the created elements to their parents a return the finished container\n    dateTimeSelectorPreview.appendChild(dateTimeCurrentDate);\n    dateTimeSelector.appendChild(dateTimeSelectorPreview);\n    dateTimeSelector.appendChild(dateTimeSelectorContent);\n    dateTimePopup.appendChild(dateTimeSelector);\n    return dateTimePopup;\n  }\n\n  /** Generate the buttons interface **/\n  function generateDateTimeModule_buttons() {\n    // Create the button elements\n    var dateTimeButtons           = document.createElement(\"div\"),\n        dateTimeButtonsOk         = document.createElement(\"button\"),\n        dateTimeButtonsCancel     = document.createElement(\"button\"),\n        dateTimeButtonsClear      = document.createElement(\"button\");\n\n    // Assign classes and content to the buttons\n    dateTimeButtons.className         = \"col-12 center-align\";\n    dateTimeButtonsOk.className       = \"btn width-2 width-xl-3\";\n    dateTimeButtonsCancel.className   = \"btn width-2 width-xl-3\";\n    dateTimeButtonsClear.className    = \"btn width-2 width-xl-3\";\n    dateTimeButtonsOk.innerHTML       = \"Ok\";\n    dateTimeButtonsCancel.innerHTML   = \"Cancel\";\n    dateTimeButtonsClear.innerHTML    = \"Clear\";\n\n    // Set an onclick attribute to the buttons\n    dateTimeButtonsOk.setAttribute(\"onClick\", \"dateTimePicker.set()\");\n    dateTimeButtonsCancel.setAttribute(\"onClick\", \"dateTimePicker.close()\");\n    dateTimeButtonsClear.setAttribute(\"onClick\", \"dateTimePicker.clear()\");\n    dateTimeButtonsOk.setAttribute(\"type\", \"button\");\n    dateTimeButtonsCancel.setAttribute(\"type\", \"button\");\n    dateTimeButtonsClear.setAttribute(\"type\", \"button\");\n\n    // Append the buttons to the parent element and return the buttons module\n    dateTimeButtons.appendChild(dateTimeButtonsOk);\n    dateTimeButtons.appendChild(dateTimeButtonsCancel);\n    dateTimeButtons.appendChild(dateTimeButtonsClear);\n    return dateTimeButtons;\n  }\n\n  /** Generate the calender interface **/\n  function generateDateTimeModule_calender() {\n    // Create the calender elements and other variables\n    var dateTimeCalender                = document.createElement(\"div\"),\n        dateTimeCalenderNav             = document.createElement(\"div\"),\n        dateTimeCalenderYears           = document.createElement(\"div\"),\n        dateTimeCalenderMonths          = document.createElement(\"div\"),\n        dateTimeCalenderDates           = document.createElement(\"div\"),\n        dateTimeCalenderNavDecrement    = document.createElement(\"div\"),\n        dateTimeCalenderNavHeader       = document.createElement(\"div\"),\n        dateTimeCalenderNavIncrement    = document.createElement(\"div\"),\n        decrementSpan                   = document.createElement(\"span\"),\n        headerSpan                      = document.createElement(\"span\"),\n        incrementSpan                   = document.createElement(\"span\"),\n        yearsTable                      = document.createElement(\"table\"),\n        monthsTable                     = document.createElement(\"table\"),\n        datesTable                      = document.createElement(\"table\"),\n        datesTableHeader                = document.createElement(\"tr\"),\n        monthsArray                     = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        weekdayArray                    = [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n        monthsCounter                   = 0;\n\n    // Set classes for the calender elements based on the mode\n    if(pickerModeArray[pickerCounter] !== \"datetime\"){ dateTimeCalender.className = \"col-12\"; }\n    else { dateTimeCalender.className = \"col-8 col-m-12\"; }\n\n    // Set classes and id's to elements\n    dateTimeCalenderNav.className           = \"col-12 date-time-cal-header\";\n    dateTimeCalenderNavDecrement.className  = \"col-1 padding-0 center-align\";\n    dateTimeCalenderNavHeader.className     = \"col-10 padding-0 center-align\";\n    dateTimeCalenderNavIncrement.className  = \"col-1 padding-0 center-align\";\n    decrementSpan.className                 = \"date-mode-decrement\";\n    headerSpan.className                    = \"date-mode-header\";\n    incrementSpan.className                 = \"date-mode-increment\";\n    dateTimeCalenderYears.className         = \"col-12 padding-0 date-cal-years\";\n    dateTimeCalenderMonths.className        = \"col-12 padding-0 date-cal-months\";\n    dateTimeCalenderDates.className         = \"col-12 padding-0 date-time-cal-visible date-cal-days\";\n    headerSpan.id                           = \"date-mode-header_\" + pickerCounter;\n    dateTimeCalenderYears.id                = \"date-cal-years_\" + pickerCounter;\n    dateTimeCalenderMonths.id               = \"date-cal-months_\" + pickerCounter;\n    dateTimeCalenderDates.id                = \"date-cal-days_\" + pickerCounter;\n\n    // Set an onclick attribute to the elements\n    decrementSpan.setAttribute(\"onClick\", \"dateTimePicker.decrementCal()\");\n    headerSpan.setAttribute(\"onClick\", \"dateTimePicker.changeCalMode()\");\n    incrementSpan.setAttribute(\"onClick\", \"dateTimePicker.incrementCal()\");\n\n    // Set the content of the elements\n    decrementSpan.innerHTML   = '&lt;';\n    headerSpan.innerHTML      = 'Month Year';\n    incrementSpan.innerHTML   = '&gt;';\n\n    // Create year and month grids 3 Rows 4 Cols\n    for(var i = 1; i <= 3; i++) {\n      var yearsTableRow   = document.createElement(\"tr\"),\n          monthsTableRow  = document.createElement(\"tr\");\n      for(var j = 0; j < 4; j++) {\n        var yearsTableRowCol  = document.createElement(\"td\"),\n            monthsTableRowCol = document.createElement(\"td\");\n\n        yearsTableRowCol.id           = \"years-\" + i + \"-\" + j + \"_\" + pickerCounter;\n        monthsTableRowCol.id          = \"months-\" + i + \"-\" + j + \"_\" + pickerCounter;\n        monthsTableRowCol.innerHTML   = monthsArray[monthsCounter];\n        monthsCounter++;\n\n        yearsTableRow.appendChild(yearsTableRowCol);\n        monthsTableRow.appendChild(monthsTableRowCol);\n      }\n      yearsTable.appendChild(yearsTableRow);\n      monthsTable.appendChild(monthsTableRow);\n    }\n\n    if(pickerModeArray[pickerCounter] !== \"months\") {\n      // Create date days header 1 Row 7 Cols\n      for(i = 0; i < 7; i++) {\n        var datesTableHeaderCol = document.createElement(\"th\");\n        datesTableHeaderCol.innerHTML = weekdayArray[i];\n        datesTableHeader.appendChild(datesTableHeaderCol);\n      }\n      datesTable.appendChild(datesTableHeader);\n\n      // Create dates grid 6 Rows 7 Cols\n      for(i = 1; i <= 6; i++) {\n        var datesTableRow = document.createElement(\"tr\");\n        for(j = 0; j < 7; j++) {\n          var datesTableRowCol = document.createElement(\"td\");\n          datesTableRowCol.id = \"dates-\" + i + \"-\" + j + \"_\" + pickerCounter;\n          datesTableRow.appendChild(datesTableRowCol);\n        }\n        datesTable.appendChild(datesTableRow);\n      }\n    }\n\n    // Append the calender elements to the calender parent and return the calender module\n    dateTimeCalenderNavDecrement.appendChild(decrementSpan);\n    dateTimeCalenderNavHeader.appendChild(headerSpan);\n    dateTimeCalenderNavIncrement.appendChild(incrementSpan);\n    dateTimeCalenderNav.appendChild(dateTimeCalenderNavDecrement);\n    dateTimeCalenderNav.appendChild(dateTimeCalenderNavHeader);\n    dateTimeCalenderNav.appendChild(dateTimeCalenderNavIncrement);\n    dateTimeCalenderYears.appendChild(yearsTable);\n    dateTimeCalenderMonths.appendChild(monthsTable);\n    dateTimeCalenderDates.appendChild(datesTable);\n    dateTimeCalender.appendChild(dateTimeCalenderNav);\n    dateTimeCalender.appendChild(dateTimeCalenderYears);\n    dateTimeCalender.appendChild(dateTimeCalenderMonths);\n    dateTimeCalender.appendChild(dateTimeCalenderDates);\n    return dateTimeCalender;\n  }\n\n  /** Generate the time interface **/\n  function generateDateTimeModule_time() {\n    // Create time elements\n    var dateTimeTime                = document.createElement(\"div\"),\n        dateTimeTimeHour            = document.createElement(\"div\"),\n        dateTimeTimeMin             = document.createElement(\"div\"),\n        dateTimeTimeSeperator       = document.createElement(\"div\"),\n        dateTimeTimeHourIncrement   = document.createElement(\"span\"),\n        dateTimeTimeHourValue       = document.createElement(\"span\"),\n        dateTimeTimeHourDecrement   = document.createElement(\"span\"),\n        dateTimeTimeMinIncrement    = document.createElement(\"span\"),\n        dateTimeTimeMinValue        = document.createElement(\"span\"),\n        dateTimeTimeMinDecrement    = document.createElement(\"span\");\n\n    // Set classes for the time elements based on the mode\n    if(pickerModeArray[pickerCounter] !== \"datetime\"){ dateTimeTime.className = \"col-12 date-time-time-picker center-align\"; }\n    else { dateTimeTime.className = \"col-4 col-m-12 date-time-time-picker center-align\"; }\n\n    // Set classes and id's to elements\n    dateTimeTimeHour.className              = \"col-4 time-container\";\n    dateTimeTimeMin.className               = \"col-4 time-container\";\n    dateTimeTimeSeperator.className         = \"col-4 time-separator\";\n    dateTimeTimeHourIncrement.className     = \"time-increment\";\n    dateTimeTimeHourDecrement.className     = \"time-decrement\";\n    dateTimeTimeMinIncrement.className      = \"time-increment\";\n    dateTimeTimeMinDecrement.className      = \"time-decrement\";\n    dateTimeTimeHourValue.className         = \"time-hour\";\n    dateTimeTimeMinValue.className          = \"time-min\";\n    dateTimeTimeHourValue.id                = \"time-hour_\" + pickerCounter;\n    dateTimeTimeMinValue.id                 = \"time-min_\" + pickerCounter;\n\n    // Set an onclick attribute to the elements\n    dateTimeTimeHourIncrement.setAttribute(\"onClick\", \"dateTimePicker.incrementTime('hour')\");\n    dateTimeTimeHourDecrement.setAttribute(\"onClick\", \"dateTimePicker.decrementTime('hour')\");\n    dateTimeTimeMinIncrement.setAttribute(\"onClick\", \"dateTimePicker.incrementTime('min')\");\n    dateTimeTimeMinDecrement.setAttribute(\"onClick\", \"dateTimePicker.decrementTime('min')\");\n\n    // Set the content of the elements\n    dateTimeTimeHourIncrement.innerHTML   = '&lt;';\n    dateTimeTimeHourDecrement.innerHTML   = '&lt;';\n    dateTimeTimeMinIncrement.innerHTML    = '&lt;';\n    dateTimeTimeMinDecrement.innerHTML    = '&lt;';\n    dateTimeTimeHourValue.innerHTML       = \"00\";\n    dateTimeTimeSeperator.innerHTML       = \":\";\n    dateTimeTimeMinValue.innerHTML        = \"00\";\n\n    // Append the time elements to the time parent and return the time module\n    dateTimeTimeHour.appendChild(dateTimeTimeHourIncrement);\n    dateTimeTimeHour.appendChild(dateTimeTimeHourValue);\n    dateTimeTimeHour.appendChild(dateTimeTimeHourDecrement);\n    dateTimeTimeMin.appendChild(dateTimeTimeMinIncrement);\n    dateTimeTimeMin.appendChild(dateTimeTimeMinValue);\n    dateTimeTimeMin.appendChild(dateTimeTimeMinDecrement);\n    dateTimeTime.appendChild(dateTimeTimeHour);\n    dateTimeTime.appendChild(dateTimeTimeSeperator);\n    dateTimeTime.appendChild(dateTimeTimeMin);\n    return dateTimeTime;\n  }\n  /*\n    ################################\n    DATE / TIME PICKER BUILDER - END\n    ################################\n  */\n\n  /*\n    ##########################################\n    SHOW SET AND HIDE DATE TIME PICKER - START\n    ##########################################\n  */\n  /* Show the date / time picker */\n  function show(pickerID, theValue) {\n    // Update tracking variables with info about the clicked picker\n    pickerCurrentPicker     = \"#dateTimePickerFor_\" + pickerID;\n    pickerCurrentPickerID   = pickerID;\n    pickerCurrentValue      = theValue;\n\n    // Get the picker element and make it visible\n    var thePicker = elem(pickerCurrentPicker);\n    thePicker.classList.remove(\"datetime-popup-hidden\");\n    thePicker.classList.add(\"datetime-popup-visible\");\n\n    // Initialise and render or update elements based on the pickers mode\n    initialise();\n    switch(pickerModeArray[pickerID]) {\n      case \"datetime\":\n        renderDaysCal();\n        updateCurrentDateTime();\n        updateTimeSelector();\n        showHideCalsForMode();\n        break;\n      case \"date\":\n        renderDaysCal();\n        updateCurrentDateTime();\n        showHideCalsForMode();\n        break;\n      case \"month\":\n        renderMonthsCal();\n        updateCurrentDateTime();\n        showHideCalsForMode();\n        break;\n      case \"time\":\n        updateTimeSelector();\n        break;\n    }\n  }\n\n  /* Hide the date / time picker */\n  function close() {\n    // Get the picker element and make it hidden\n    var thePicker = elem(pickerCurrentPicker);\n    thePicker.classList.add(\"datetime-popup-hidden\");\n    thePicker.classList.remove(\"datetime-popup-visible\");\n  }\n\n  /* Clear the current set date time */\n  function clear() {\n    // Get the input element\n    var dateInputElem   = elem(pickerRootParentArray[pickerCurrentPickerID]),\n        theInput        = dateInputElem.getElementsByTagName(\"input\")[0];\n\n    theInput.value = \"\";\n    close();\n  }\n\n  /* Set the input value to the select date / time then close the picker */\n  function set() {\n    // Get the input element\n    var dateInputElem   = elem(pickerRootParentArray[pickerCurrentPickerID]),\n        theInput        = dateInputElem.getElementsByTagName(\"input\")[0];\n\n    // Update the value of the input element based on the mode\n    switch(pickerModeArray[pickerCurrentPickerID]) {\n      case \"datetime\":\n        theInput.value = selectedYear + \"-\" + dateTime.leadZero(selectedMonth + 1) + \"-\" + dateTime.leadZero(selectedDate) + \" \" +\n          dateTime.leadZero(selectedTimeHour) + \":\" + dateTime.leadZero(selectedTimeMin);\n        break;\n      case \"date\":\n        theInput.value = selectedYear + \"-\" + dateTime.leadZero(selectedMonth + 1) + \"-\" + dateTime.leadZero(selectedDate);\n        break;\n      case \"month\":\n        theInput.value = dateTime.textifyMonth(selectedMonth) + \" \" + selectedYear;\n        break;\n      case \"time\":\n        theInput.value = dateTime.leadZero(selectedTimeHour) + \":\" + dateTime.leadZero(selectedTimeMin);\n        break;\n    }\n\n    // Close the picker\n    close();\n  }\n  /*\n    ########################################\n    SHOW SET AND HIDE DATE TIME PICKER - END\n    ########################################\n  */\n\n  /*\n    #####################################\n    INITIALISE, RENDER AND UPDATE - START\n    #####################################\n  */\n  /* Initialise the date time picker */\n  function initialise() {\n    // Create variables and set the current mode of the calender to dates\n    var initialDate;\n    if(pickerModeArray[pickerCurrentPickerID] === \"month\") {\n      currentMode = \"months\";\n    } else { currentMode = \"dates\"; }\n\n    // If the input has a date value set use that as default otherwise use the date / time\n    if(pickerCurrentValue !== \"\") {\n      if(pickerModeArray[pickerCurrentPickerID] === \"time\") {\n        initialDate = new Date(\"2000-01-01T\" + pickerCurrentValue);\n      } else if (pickerModeArray[pickerCurrentPickerID] === \"month\") {\n        var theDate = \"\";\n        var pickerMonth = pickerCurrentValue.split(' ')[0];\n        var pickerYear = pickerCurrentValue.split(' ')[1];\n\n        theDate += pickerYear;\n        switch (pickerMonth) {\n          case \"January\": theDate += \"-01-01\"; break;\n          case \"February\": theDate += \"-02-01\"; break;\n          case \"March\": theDate += \"-03-01\"; break;\n          case \"April\": theDate += \"-04-01\"; break;\n          case \"May\": theDate += \"-05-01\"; break;\n          case \"June\": theDate += \"-06-01\"; break;\n          case \"July\": theDate += \"-07-01\"; break;\n          case \"August\": theDate += \"-08-01\"; break;\n          case \"September\": theDate += \"-09-01\"; break;\n          case \"October\": theDate += \"-10-01\"; break;\n          case \"November\": theDate += \"-11-01\"; break;\n          case \"December\": theDate += \"-12-01\"; break;\n          default: theDate += \"-01-01\"; break;\n        }\n\n        initialDate = new Date(theDate);\n      } else {\n        initialDate = new Date(pickerCurrentValue.replace(/\\s/, 'T'));\n      }\n    } else {\n      initialDate = new Date();\n    }\n\n    // Set up date / time variables\n    selectedTimeHour  = initialDate.getHours();\n    selectedTimeMin   = initialDate.getMinutes();\n    currentMonth      = initialDate.getMonth();\n    currentYear       = initialDate.getFullYear();\n    selectedDate      = initialDate.getDate();\n    selectedDay       = initialDate.getDay();\n    selectedMonth     = initialDate.getMonth();\n    selectedYear      = initialDate.getFullYear();\n    yearRangeMin      = initialDate.getFullYear() - 5;\n    yearRangeMax      = initialDate.getFullYear() + 6;\n  }\n\n  /* Update the currently selected date / time */\n  function updateCurrentDateTime() {\n    if(selectedDay > 6) selectedDay = 0;\n    if(selectedDay < 0) selectedDay = 6;\n\n    var currentDateElem   = elem(\"#datetime-selector-current-date_\" + pickerCurrentPickerID),\n        date              = dateTime.suffixDate(selectedDate),\n        day               = dateTime.textifyWeekDay(selectedDay),\n        month             = dateTime.textifyMonth(selectedMonth),\n        hour              = dateTime.leadZero(selectedTimeHour),\n        min               = dateTime.leadZero(selectedTimeMin),\n        year              = selectedYear;\n\n    switch(pickerModeArray[pickerCurrentPickerID]) {\n      case \"datetime\":  currentDateElem.innerHTML = day + \" \" + date + \" \" + month + \" \" + year + \" - \" + hour + \":\" + min; break;\n      case \"date\":      currentDateElem.innerHTML = day + \" \" + date + \" \" + month + \" \" + year; break;\n      case \"month\":     currentDateElem.innerHTML = month + \" \" + year; break;\n      case \"time\":      currentDateElem.innerHTML = \"\"; currentDateElem.style.display = \"none\"; break;\n    }\n  }\n\n  /** Time Selector - Start **/\n  /** Get the hour and min elements **/\n  function getTimeHourElem() { return elem(\"#time-hour_\" + pickerCurrentPickerID); }\n  function getTimeMinElem() { return elem(\"#time-min_\" + pickerCurrentPickerID); }\n\n  /** Increment the time value **/\n  function incrementTime(hourMin) {\n    switch(hourMin) {\n      case \"hour\":  selectedTimeHour  = (selectedTimeHour !== 23)  ? selectedTimeHour + 1 : 0; break;\n      case \"min\":   selectedTimeMin   = (selectedTimeMin !== 59)   ? selectedTimeMin + 1 : 0; break;\n    }\n    updateTimeSelector();\n  }\n\n  /** Decrement the time value **/\n  function decrementTime(hourMin) {\n    switch(hourMin) {\n      case \"hour\":  selectedTimeHour  = (selectedTimeHour !== 0)   ? selectedTimeHour - 1 : 23; break;\n      case \"min\":   selectedTimeMin   = (selectedTimeMin !== 0)    ? selectedTimeMin - 1 : 59; break;\n    }\n    updateTimeSelector();\n  }\n\n  /** Update the time view **/\n  function updateTimeSelector() {\n    getTimeHourElem().innerHTML = dateTime.leadZero(selectedTimeHour);\n    getTimeMinElem().innerHTML  = dateTime.leadZero(selectedTimeMin);\n    updateCurrentDateTime();\n  }\n  /** Time Selector - End **/\n\n\n  /** Date Selector **/\n  /** Get the number of days in the month and the first weekday in the month **/\n  function getDaysInMonth(month, year) { return new Date(year, month + 1, 0).getDate(); }\n  function getFirstWeekDayInMonth(month, year) { return new Date(year, month, 1).getDay(); }\n\n  /** Render the calender  **/\n  function renderDaysCal() {\n    // Setup variables\n    var daysInMonth       = getDaysInMonth(currentMonth, currentYear),\n        firstWeekDay      = getFirstWeekDayInMonth(currentMonth, currentYear),\n        rowCounter        = 1,\n        colCounter        = 0,\n        monthDayCounter   = 1,\n        today             = new Date(),\n        dateModeHeader;\n\n    // Setup first week day number\n    firstWeekDay--;\n    if(firstWeekDay === -1) { firstWeekDay = 6; }\n\n    // Set the calender header to show the current month and year\n    dateModeHeader = elem(\"#date-mode-header_\" + pickerCurrentPickerID);\n    dateModeHeader.innerHTML = dateTime.textifyMonth(currentMonth) + \" \" + currentYear;\n\n    // Work through the grid and set the date as required\n    for (var i = 1; i <= 42; i++) {\n      var currentCoords       = rowCounter + \"-\" + colCounter,\n          currentCalGridElem  = elem(\"#dates-\" + currentCoords + \"_\" + pickerCurrentPickerID);\n\n      // Clear the following classes from the element\n      currentCalGridElem.classList.remove(\"cal-grid-day-today\");\n      currentCalGridElem.classList.remove(\"cal-grid-day-disabled\");\n      currentCalGridElem.classList.remove(\"cal-grid-day-selected\");\n\n      // Disable and don't print any data to cells in the first row before the first day of the month OR\n      // Disable and don't print any data to cells after the last day of the month\n      if ((rowCounter === 1 && colCounter < firstWeekDay) || (monthDayCounter > daysInMonth)) {\n        // Disable the cell\n        currentCalGridElem.innerHTML = \"\";\n        currentCalGridElem.classList.add(\"cal-grid-day-disabled\");\n      } else {\n        // Print the date to the cell\n        currentCalGridElem.innerHTML = monthDayCounter;\n        currentCalGridElem.setAttribute(\"onClick\", \"dateTimePicker.selectCalDate(\" + colCounter + \", \" + monthDayCounter + \")\");\n\n        // Check to see if the current cell matches todays date\n        if (monthDayCounter <= daysInMonth) {\n          if((today.getDate() === monthDayCounter) &&\n            (today.getMonth() === currentMonth) &&\n            (today.getFullYear() === currentYear)) {\n            // If the cell is todays date add the today class to it\n            currentCalGridElem.classList.add(\"cal-grid-day-today\");\n          }\n        }\n\n        // Check to see if the current cell is the user selected date\n        if((monthDayCounter === selectedDate) &&\n          (currentMonth === selectedMonth) &&\n          (currentYear === selectedYear)) {\n          // IF the cell is the selected date add the selected class to it\n          currentCalGridElem.classList.add(\"cal-grid-day-selected\");\n        }\n\n        // Increment the month day counter by 1\n        monthDayCounter++;\n      }\n\n      // Update the row and col tracking to move to next cell\n      rowCounter = colCounter === 6 ? rowCounter += 1 : rowCounter;\n      colCounter = colCounter === 6 ? colCounter = 0 : colCounter += 1;\n    }\n  }\n\n  /** Render the months calender **/\n  function renderMonthsCal() {\n    // Setup variables\n    var rowCounter      = 1,\n        colCounter      = 0,\n        today           = new Date(),\n        dateModeHeader;\n\n    // Set the calender header to the current year\n    dateModeHeader            = elem(\"#date-mode-header_\" + pickerCurrentPickerID);\n    dateModeHeader.innerHTML  = currentYear;\n\n    // Loop 12 times\n    for (var i = 0; i < 12; i++) {\n      var currentCoords       = rowCounter + \"-\" + colCounter,\n          currentCalGridElem  = elem(\"#months-\" + currentCoords + \"_\" + pickerCurrentPickerID);\n\n      // Remove classes and set an onclick attribute\n      currentCalGridElem.classList.remove(\"cal-grid-month-today\");\n      currentCalGridElem.classList.remove(\"cal-grid-month-selected\");\n      currentCalGridElem.setAttribute(\"onClick\", \"dateTimePicker.selectCalMonth(\" + i + \")\");\n\n      // Check to see if the current month is the current selected month\n      if ((i === selectedMonth) && (currentYear === selectedYear)) {\n        currentCalGridElem.classList.add(\"cal-grid-month-selected\");\n      }\n\n      // Check to see if the current month is todays month\n      if(today.getFullYear() === currentYear && today.getMonth() === i) {\n        currentCalGridElem.classList.add(\"cal-grid-month-today\");\n      }\n\n      // Increment the row and col counters\n      rowCounter = colCounter === 3 ? rowCounter += 1 : rowCounter;\n      colCounter = colCounter === 3 ? colCounter = 0 : colCounter += 1;\n    }\n  }\n\n  /** Render the years calender **/\n  function renderYearsCal() {\n    var rowCounter      = 1,\n        colCounter      = 0,\n        yearCounter     = yearRangeMin,\n        today           = new Date(),\n        dateModeHeader;\n\n    // Set the calender header to the current year range\n    dateModeHeader            = elem(\"#date-mode-header_\" + pickerCurrentPickerID);\n    dateModeHeader.innerHTML  = yearRangeMin + \" - \" + yearRangeMax;\n\n    // Loop 12 times\n    for (var i = 0; i < 12; i++) {\n      var currentCoords       = rowCounter + \"-\" + colCounter,\n          currentCalGridElem  = elem(\"#years-\" + currentCoords + \"_\" + pickerCurrentPickerID);\n\n      // Remove classes, set onclick attribute and add content\n      currentCalGridElem.classList.remove(\"cal-grid-year-today\");\n      currentCalGridElem.classList.remove(\"cal-grid-year-selected\");\n      currentCalGridElem.innerHTML = yearCounter;\n      currentCalGridElem.setAttribute(\"onClick\", \"dateTimePicker.selectCalYear(\" + yearCounter + \")\");\n\n      // If the current year equals the selected year add the selected class\n      if (yearCounter === selectedYear) { currentCalGridElem.classList.add(\"cal-grid-year-selected\"); }\n\n      // If the current year equals todays year add the today class\n      if(today.getFullYear() === yearCounter) { currentCalGridElem.classList.add(\"cal-grid-year-today\"); }\n\n      // Increment the year and row / col counters\n      yearCounter++;\n      rowCounter = colCounter === 3 ? rowCounter += 1 : rowCounter;\n      colCounter = colCounter === 3 ? colCounter = 0 : colCounter += 1;\n    }\n  }\n\n  /** Decide on what calender to show **/\n  function showHideCalsForMode() {\n    switch(currentMode) {\n      case \"dates\":   showDatesCal(); hideMonthsCal(); hideYearsCal(); renderDaysCal(); break;\n      case \"months\":  showMonthsCal(); hideDatesCal(); hideYearsCal(); renderMonthsCal(); break;\n      case \"years\":   showYearsCal(); hideMonthsCal(); renderYearsCal(); break;\n    }\n  }\n\n  /** Functions to show the calenders **/\n  function showDatesCal()   { elem(\"#date-cal-days_\" + pickerCurrentPickerID).classList.add(\"date-time-cal-visible\"); }\n  function showMonthsCal()  { elem(\"#date-cal-months_\" + pickerCurrentPickerID).classList.add(\"date-time-cal-visible\"); }\n  function showYearsCal()   { elem(\"#date-cal-years_\" + pickerCurrentPickerID).classList.add(\"date-time-cal-visible\"); }\n\n  /** Functions to hide the calenders **/\n  function hideDatesCal()   { elem(\"#date-cal-days_\" + pickerCurrentPickerID).classList.remove(\"date-time-cal-visible\"); }\n  function hideMonthsCal()  { elem(\"#date-cal-months_\" + pickerCurrentPickerID).classList.remove(\"date-time-cal-visible\"); }\n  function hideYearsCal()   { elem(\"#date-cal-years_\" + pickerCurrentPickerID).classList.remove(\"date-time-cal-visible\"); }\n\n  /** Change the current mode of the calender **/\n  function changeCalMode() {\n    switch(currentMode) {\n      case \"dates\":   currentMode = \"months\"; break;\n      case \"months\":  currentMode = \"years\"; break;\n    }\n    showHideCalsForMode();\n  }\n\n  /** Decrement the current calender value **/\n  function decrementCal() {\n    switch(currentMode) {\n      case \"dates\":   decrementCurrentMonth(); renderDaysCal(); break;\n      case \"months\":  decrementcurrentYear(); renderMonthsCal(); break;\n      case \"years\":   decrementYearRange(); renderYearsCal(); break;\n    }\n  }\n\n  /** Increment the current calender value **/\n  function incrementCal() {\n    switch(currentMode) {\n      case \"dates\":   incrementCurrentMonth(); renderDaysCal(); break;\n      case \"months\":  incrementCurrentYear(); renderMonthsCal(); break;\n      case \"years\":   incrementYearRange(); renderYearsCal(); break;\n    }\n  }\n\n  /** Increment the current month **/\n  function incrementCurrentMonth() {\n    if(currentMonth === 11) { incrementCurrentYear(); currentMonth = 0; }\n    else { currentMonth++; }\n  }\n\n  /** Decrement the current month **/\n  function decrementCurrentMonth() {\n    if(currentMonth === 0) { decrementcurrentYear(); currentMonth = 11; }\n    else { currentMonth--; }\n  }\n\n  /** Increment and Decrement current year functions **/\n  function incrementCurrentYear() { currentYear++; }\n  function decrementcurrentYear() { currentYear--; }\n\n  /** Increment current year range **/\n  function incrementYearRange() {\n    yearRangeMin += 12;\n    yearRangeMax += 12;\n  }\n\n  /** Decrement current year range **/\n  function decrementYearRange() {\n    yearRangeMin -= 12;\n    yearRangeMax -= 12;\n  }\n\n  /** Update the user selected date **/\n  function selectCalDate(theDay, theDate) {\n    selectedDay     = theDay + 1;\n    selectedDate    = theDate;\n    selectedMonth   = currentMonth;\n    selectedYear    = currentYear;\n    renderDaysCal();\n    updateCurrentDateTime();\n  }\n\n  /** Update the user select month and go back to the dates calender **/\n  function selectCalMonth(theMonth) {\n    currentMonth  = theMonth;\n\n    if(pickerModeArray[pickerCurrentPickerID] === \"month\") {\n      selectedMonth   = currentMonth;\n      selectedYear    = currentYear;\n      renderMonthsCal();\n      updateCurrentDateTime();\n    } else {\n      currentMode   = \"dates\";\n      showHideCalsForMode();\n    }\n  }\n\n  /** Update the user selected year and go back to the months calender **/\n  function selectCalYear(theYear) {\n    currentYear   = theYear;\n    currentMode   = \"months\";\n    showHideCalsForMode();\n  }\n  /*\n    ###################################\n    INITIALISE, RENDER AND UPDATE - END\n    ###################################\n  */\n\n\n  /*\n    ################################\n    PUBLIC EXPOSED FUNCTIONS - START\n    ################################\n  */\n  return {\n    create:             function (args) {return create(args)},\n    show:               function (id, value) {return show(id, value)},\n    close:              function () {return close()},\n    set:                function () {return set()},\n    clear:              function () {return clear()},\n\n    incrementTime:      function (hourMin) {return incrementTime(hourMin)},\n    decrementTime:      function (hourMin) {return decrementTime(hourMin)},\n\n    selectCalDate:      function (theDay, theDate) {return selectCalDate(theDay, theDate)},\n    selectCalMonth:     function (theMonth) {return selectCalMonth(theMonth)},\n    selectCalYear:      function (theYear) {return selectCalYear(theYear)},\n    incrementCal:       function () {return incrementCal()},\n    decrementCal:       function () {return decrementCal()},\n    changeCalMode:      function () {return changeCalMode()}\n  }\n  /*\n    ##############################\n    PUBLIC EXPOSED FUNCTIONS - END\n    ##############################\n  */\n})();\n","////////////////////////////////////////////////////////////////\n// Element Selector                                           //\n////////////////////////////////////////////////////////////////\n\n/**\n * Return the element passed by its ID\n * @param  {string} element\n * @return {Object} theElement\n **/\nfunction elem(element) {\n  var theElement;\n\n  if(element.substring(0, 1) === '.') {\n    theElement = document.getElementsByClassName(element.split('.')[1]);\n  } else if(element.substring(0, 1) === '#') {\n    theElement = document.getElementById(element.split('#')[1]);\n  } else {\n    theElement = document.getElementsByTagName(element);\n  }\n\n  return theElement;\n}\n\n////////////////////////////////////////////////////////////////","////////////////////////////////////////////////////////////////\n// Footer Scripts                                             //\n////////////////////////////////////////////////////////////////\n\n/**\n * Fix a footer to the bottom of the page\n */\n//window.onload = fixifyFooter();\nwindow.addEventListener(\"DOMContentLoaded\", fixifyFooter);\nwindow.addEventListener(\"resize\", fixifyFooter);\nfunction fixifyFooter() {\n  var footer = document.getElementsByTagName(\"footer\");\n\n  for(var i = 0; i < footer.length; i++) {\n    if(footer[i].classList.contains(\"fixed-footer\")) {\n      var offset = footer[i].clientHeight;\n      document.getElementsByTagName(\"body\")[0].style.marginBottom = offset + \"px\";\n    }\n  }\n}\n\n/**\n * Stick a footer to the bottom of the page\n */\n//window.ready = stickifyFooter();\nwindow.addEventListener(\"DOMContentLoaded\", stickifyFooter);\nwindow.addEventListener(\"resize\", stickifyFooter);\nfunction stickifyFooter() {\n  var footer = document.getElementsByTagName(\"footer\");\n\n  for(var i = 0; i < footer.length; i++) {\n    if(footer[i].classList.contains(\"sticky-footer\")) {\n      var offset = footer[i].clientHeight;\n      document.getElementsByTagName(\"body\")[0].style.paddingBottom = offset + \"px\";\n      document.getElementsByTagName(\"html\")[0].style.minHeight = \"100%\";\n      document.getElementsByTagName(\"html\")[0].style.position = \"relative\";\n    }\n  }\n}\n\n////////////////////////////////////////////////////////////////","////////////////////////////////////////////////////////////////\n// Gallery Functions                                          //\n////////////////////////////////////////////////////////////////\n\nvar gallery = (function () {\n  /**\n   * Setup the elements needed for the gallery to work\n   * @param args\n   */\n  function create(args) {\n    var imgClasses          = (args.imgClasses)           ? args.imgClasses           : \"\";\n    var imgContainerClasses = (args.imgContainerClasses)  ? args.imgContainerClasses  : \"\";\n    var spinner             = (args.spinner)              ? args.spinner              : \"\";\n    var images              = (args.images)               ? args.images               : [];\n    var galleryID           = (args.galleryID)            ? args.galleryID            : \"\";\n\n    var galleryElem           = elem(galleryID);\n    var galleryOverlay        = document.createElement(\"div\");\n    var galleryOverlayImg     = document.createElement(\"img\");\n\n    galleryOverlayImg.className = \"bordered-img\";\n    galleryOverlay.className    = \"gallery-overlay\";\n    galleryOverlay.onclick = function () {\n      hideImage(galleryOverlay);\n    };\n\n    galleryElem.appendChild(galleryOverlay);\n    galleryOverlay.appendChild(galleryOverlayImg);\n\n    // Loop each gallery image\n    for(var i = 0; i < images.length; i++) {\n      const galleryImgContainer = document.createElement(\"div\");\n      const galleryImage        = document.createElement(\"img\");\n\n      galleryImgContainer.className = imgContainerClasses;\n      galleryImage.className        = imgClasses;\n      galleryImage.src              = images[i];\n\n      if(spinner) {\n        galleryImgContainer.classList.add(\"relative\");\n        const spinnerHolder = document.createElement(\"div\");\n        const spinnerContent = document.createElement(\"div\");\n\n        spinnerHolder.className = \"spinner\";\n        spinnerContent.className = spinner;\n\n        galleryImgContainer.appendChild(spinnerHolder);\n        spinnerHolder.appendChild(spinnerContent);\n\n        if(spinner) {\n          galleryImage.classList.add(\"opacity-0\");\n        }\n\n        galleryImage.onload = function () {\n          galleryImage.classList.remove(\"opacity-0\");\n        }\n      }\n\n      galleryElem.appendChild(galleryImgContainer);\n      galleryImgContainer.appendChild(galleryImage);\n    }\n\n    // Loop each image in gallery\n    for(var j = 1; j < (galleryElem.children.length); j++) {\n      const imgElem = galleryElem.children[j];\n\n      imgElem.onclick = function() {\n        showImage(imgElem, galleryOverlay);\n      };\n    }\n  }\n\n  /**\n   * Run when a gallery image is clicked show the overlay\n   * @param imgElem\n   * @param overlayElem\n   */\n  function showImage(imgElem, overlayElem) {\n    overlayElem.getElementsByTagName(\"img\")[0].src = imgElem.getElementsByTagName(\"img\")[0].src;\n    overlayElem.classList.remove(\"gallery-overlay-hidden\");\n    overlayElem.classList.add(\"gallery-overlay-visible\");\n    document.body.style.overflow = \"hidden\";\n  }\n\n  /**\n   * Run when the gallery overlay is clicked to hide the overlay\n   * @param overlayElem\n   */\n  function hideImage(overlayElem) {\n    overlayElem.classList.add(\"gallery-overlay-hidden\");\n    overlayElem.classList.remove(\"gallery-overlay-visible\");\n    document.body.style.overflow = \"\";\n  }\n  \n  return {\n    create:     function (args) { return create(args) },\n    showImage:  function (imgElem, overlayElem) { return showImage(imgElem, overlayElem) },\n    hideImage:  function (overlayElem) { return hideImage(overlayElem) }\n  }\n}) ();\n\n////////////////////////////////////////////////////////////////","////////////////////////////////////////////////////////////////\n// Header Scripts                                             //\n////////////////////////////////////////////////////////////////\n\n/**\n * Fix a header to the top of the page\n */\nwindow.addEventListener(\"DOMContentLoaded\", fixifyHeader);\nwindow.addEventListener(\"resize\", fixifyHeader);\nfunction fixifyHeader() {\n  var header = document.getElementsByTagName(\"header\");\n\n  for(var i = 0; i < header.length; i++) {\n    if(header[i].classList.contains(\"fixed-header\")) {\n      var offset = header[i].clientHeight;\n      document.getElementsByTagName(\"body\")[0].style.marginTop = offset + \"px\";\n    }\n  }\n}\n\n////////////////////////////////////////////////////////////////","////////////////////////////////////////////////////////////////\n// Slideshow Scripts                                          //\n////////////////////////////////////////////////////////////////\n\nvar slideshow = (function () {\n  // Global array to hold slideshows\n  var slideshowArray = [];\n\n  /**\n   * Create a slideshow\n   * @param args\n   */\n  function create(args) {\n    var slideshowElement = elem(args['elemID']);\n    var imageArray = args['imageArray'];\n\n    // Setup args\n    var interval \t    = (args['interval']) \t    ? args['interval'] \t    : 1500;\n    var style \t\t    = (args['style']) \t\t    ? args['style'] \t\t    : \"\";\n    var control\t\t    = (args['control'])\t\t    ? args['control']\t\t    : \"\";\n    var pauseOnHover  = true;\n\n    if(args['pauseOnHover'] === false) {\n      pauseOnHover = false;\n    }\n\n    // Store slideshow in array\n    var slideshowObj = {};\n    slideshowObj.id = slideshowElement.id;\n    slideshowObj.numberOfSlides = imageArray.length;\n    slideshowObj.imageArray = imageArray;\n    slideshowObj.interval = interval;\n    slideshowObj.style = style;\n    slideshowObj.control = control;\n    slideshowObj.currentSlide = 0;\n    slideshowObj.counter = 0;\n    slideshowObj.loop = null;\n    slideshowObj.hovered = false;\n    slideshowObj.pauseOnHover = pauseOnHover;\n    slideshowArray[slideshowElement.id] = slideshowObj;\n\n    // Add slides to slideshow\n    switch(style) {\n      case \"fade\":\n        slideshowElement.appendChild(setupSlides(slideshowElement.id, \"slide-fade\"));\n        break;\n      default:\n        slideshowElement.appendChild(setupSlides(slideshowElement.id, \"\"));\n    }\n\n    // Add controls if required\n    if(control === \"arrows\") {\n      slideshowElement.appendChild(setupArrowNav(slideshowElement.id));\n    } else if(control === \"dots\") {\n      slideshowElement.appendChild(setupDotNav(slideshowElement.id));\n    }\n\n    if(pauseOnHover) {\n      slideshowElement.onmouseover = function () {\n        slideshowObj.hovered = true;\n        clearTimeout(slideshowObj.loop);\n      };\n\n      slideshowElement.onmouseout = function () {\n        slideshowObj.hovered = false;\n        slideshowObj.loop = setTimeout(nextSlide, slideshowObj.interval, slideshowObj.id, false);\n      };\n    }\n\n    // Run the slideshow\n    nextSlide(slideshowObj.id, false);\n  }\n\n  /**\n   * Create a div with the provided images\n   * @param slideIdPrefix\n   * @param classes\n   * @returns {Element}\n   */\n  function setupSlides(slideIdPrefix, classes) {\n    var slidesDiv \t\t= document.createElement(\"div\");\n    var slideshowObj \t= slideshowArray[slideIdPrefix];\n    slidesDiv.className = \"slides\";\n\n    // Loop through the images and create an img element\n    for(var i = 0; i < slideshowObj.imageArray.length; i++) {\n      var img = document.createElement(\"img\");\n      if(i === 0) {\n        img.className = \"slide-visible \" + classes\n      } else {\n        img.className = \"slide-hidden \" + classes;\n      }\n      img.id = slideIdPrefix + '-' + i;\n      img.src = slideshowObj.imageArray[i];\n      slidesDiv.appendChild(img);\n    }\n\n    return slidesDiv;\n  }\n\n  /**\n   * Creates dot navigation at bottom of slideshow\n   * @param slideshowID\n   * @returns {Element}\n   */\n  function setupDotNav(slideshowID) {\n    var slideshowObj = slideshowArray[slideshowID];\n    var dotDiv = document.createElement(\"div\");\n    dotDiv.className = \"dot-controls\";\n\n    for(var i = 0; i < slideshowObj.numberOfSlides; i++) {\n      const slide = i;\n      var dotItem = document.createElement(\"div\");\n      dotItem.id = slideshowObj.id + \"-dot-\" + i;\n      if(i === 0) {dotItem.className = \"dot-active\";}\n      dotItem.onclick = function () {\n        gotoSlide(slideshowObj.id, slide);\n      };\n      dotDiv.appendChild(dotItem);\n    }\n\n    return dotDiv;\n  }\n\n  /**\n   * Creates left and right arrow navigation\n   * @param slideshowID\n   * @returns {Element}\n   */\n  function setupArrowNav(slideshowID) {\n    var arrowDiv \t\t\t= document.createElement(\"div\");\n    var arrowNext \t\t= document.createElement(\"div\");\n    var arrowPrevious = document.createElement(\"div\");\n\n    arrowDiv.className \t\t\t= \"arrow-controls\";\n    arrowNext.className \t\t= \"next-slide\";\n    arrowPrevious.className = \"previous-slide\";\n\n    arrowPrevious.innerHTML = \"<span onclick=\\\"slideshow.previousSlide(\\'\" + slideshowID + \"\\')\\\">V</span>\";\n    arrowNext.innerHTML\t\t\t= \"<span onclick=\\\"slideshow.nextSlide(\\'\" + slideshowID + \"\\', \" + true + \")\\\">V</span>\";\n\n    arrowDiv.appendChild(arrowPrevious);\n    arrowDiv.appendChild(arrowNext);\n    return arrowDiv;\n  }\n\n  /**\n   * Progress to the next slide\n   * @param slideshowID\n   * @param usrCommand\n   */\n  function nextSlide(slideshowID, usrCommand) {\n    var slideshowObj = slideshowArray[slideshowID];\n    clearTimeout(slideshowObj.loop);\n\n    // Don't progress if the mouse is hovered over it unless overrided with usrCommand\n    if(!slideshowObj.hovered || usrCommand) {\n      // Fetch the required slide elements\n      var currentActive = ((slideshowObj.counter - 1) < 0) ? slideshowObj.numberOfSlides - 1 : slideshowObj.counter - 1;\n      var currentSlide = elem(\"#\" + slideshowObj.id + \"-\" + currentActive);\n      var newSlide = elem(\"#\" + slideshowObj.id + \"-\" + slideshowObj.counter);\n\n      transitionSlide(currentSlide, newSlide);\n      if(slideshowObj.control === \"dots\") {\n        updateDotNav(slideshowObj.id, currentActive, slideshowObj.counter);\n      }\n\n      slideshowObj.currentSlide = slideshowObj.counter;\n      slideshowObj.counter = (slideshowObj.counter < slideshowObj.numberOfSlides - 1) ? slideshowObj.counter + 1 : 0;\n    }\n\n    // Reset the timer to progress the slides\n    slideshowObj.loop = setTimeout(nextSlide, slideshowObj.interval, slideshowObj.id, false);\n  }\n\n  /**\n   * Show the previous slide\n   * @param slideshowID\n   */\n  function previousSlide(slideshowID) {\n    var slideshowObj = slideshowArray[slideshowID];\n    clearTimeout(slideshowObj.loop);\n\n    // Fetch the required slide elements\n    var currentCounter = (slideshowObj.counter - 1 < 0) ? slideshowObj.numberOfSlides - 1 : slideshowObj.counter - 1;\n    var previousCounter = (currentCounter - 1 < 0) ? slideshowObj.numberOfSlides - 1 : currentCounter - 1;\n    var currentSlide = elem(\"#\" + slideshowObj.id + \"-\" + currentCounter);\n    var newSlide = elem(\"#\" + slideshowObj.id + \"-\" + previousCounter);\n    transitionSlide(currentSlide, newSlide);\n\n    // Set the counter and reset the timer to progress the slides\n    slideshowObj.counter = previousCounter;\n    slideshowObj.counter = (slideshowObj.counter < slideshowObj.numberOfSlides - 1) ? slideshowObj.counter + 1 : 0;\n    slideshowObj.loop = setTimeout(nextSlide, slideshowObj.interval, slideshowObj.id, false);\n  }\n\n  /**\n   * Show the requested slide\n   * @param slideshowID\n   * @param slideNumber\n   */\n  function gotoSlide(slideshowID, slideNumber) {\n    var slideshowObj = slideshowArray[slideshowID];\n\n    if(slideshowObj.pauseOnHover) {\n      clearTimeout(slideshowObj.loop);\n    } else {\n      clearTimeout(slideshowObj.loop);\n      slideshowObj.loop = setTimeout(nextSlide, slideshowObj.interval, slideshowObj.id, false);\n    }\n\n    // Fetch slide numbers\n    var currentSlide = slideshowObj.currentSlide;\n    var newSlide = slideNumber;\n\n    // Update the slideshow counter to the new slide number\n    slideshowObj.counter = newSlide;\n    slideshowObj.currentSlide = newSlide;\n\n    // Transition the slide and update the nav dots\n    var cSlide = elem(\"#\" + slideshowObj.id + \"-\" + currentSlide);\n    var nSlide = elem(\"#\" + slideshowObj.id + \"-\" + newSlide);\n    transitionSlide(cSlide, nSlide);\n    updateDotNav(slideshowObj.id, currentSlide, newSlide);\n    slideshowObj.counter = (newSlide + 1 > slideshowObj.numberOfSlides - 1) ? 0 : newSlide + 1 ;\n  }\n\n  /**\n   * Transition between the given slides\n   * @param currentSlide\n   * @param newSlide\n   */\n  function transitionSlide(currentSlide, newSlide) {\n    currentSlide.classList.remove(\"slide-visible\");\n    currentSlide.classList.add(\"slide-hidden\");\n    newSlide.classList.remove(\"slide-hidden\");\n    newSlide.classList.add(\"slide-visible\");\n  }\n\n  function updateDotNav(slideshowID, currentSlide, newSlide) {\n    var dot1 = elem(\"#\" + slideshowID + \"-dot-\" + currentSlide);\n    var dot2 = elem(\"#\" + slideshowID + \"-dot-\" + newSlide);\n\n    dot1.classList.remove(\"dot-active\");\n    dot2.classList.add(\"dot-active\");\n  }\n  \n  return {\n    create: function (args) { return create(args) },\n    nextSlide: function (slideshowID, usrCommand) { return nextSlide(slideshowID, usrCommand) },\n    previousSlide: function(slideshowID) { return previousSlide(slideshowID) }\n  }\n}) ();\n\n////////////////////////////////////////////////////////////////"]}