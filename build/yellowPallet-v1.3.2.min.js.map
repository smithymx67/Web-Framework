{"version":3,"sources":["analogueClock.js","consoleLogging.js","dateTime.js","dateTimePicker.js","elementSelector.js","footerScripts.js","gallery.js","headerScripts.js","slideshow.js"],"names":["analogueClock","clockArgsArray","clockCounter","create","args","clockRotationCounterArray","hourRotationCounter","clockID","clockArgsIndex","clockHolder","elem","clockFace","createElement","clockHands","clockFaceMajorMarkers","document","clockFaceMinorMarkers","clockHandPoint","clockHandHour","clockHandMinute","clockHandSecond","handPointSpan","handHourSpan","handMinSpan","classList","add","i","majorFaceMarker","markerSpan","style","fontSize","clientWidth","innerHTML","appendChild","minorFaceMarker","tickStyle","id","buildAnalogueClock","console","log","renderAnalogueClock","date","hourHand","transform","theHours","theMinutes","theDate","Date","theSeconds","utcOffset","plusMinus","slice","getUTCHours","getUTCMinutes","hourOffset","minuteOffset","parseInt","hours","minutes","getClockTime","minuteHand","secDegree","seconds","minDegree","hourDegree","minuteRotationCounter","secondRotationCounter","secondHand","setTimeout","consoleLog","normal","message","info","success","warning","danger","dateTime","textifyMonth","month","textifyWeekDay","day","theTime","get12HrTime","number","suffixDate","get24HrTime","leadZero","getShortDate","dateObj","showAMPM","showSecs","getHours","mins","getMinutes","secs","getSeconds","ampm","getLongDate","getFullYear","getDay","getDate","getMonth","dateTimePicker","currentMonth","currentYear","currentMode","selectedTimeHour","selectedTimeMin","selectedDate","pickerCurrentPicker","pickerCurrentValue","pickerCurrentPickerID","selectedYear","pickerCounter","mode","dateInputID","pickerRootParentArray","theInput","dateInputElem","getElementsByTagName","pickerID","pickerModeArray","dateInputContentContainer","generateDateTimeModule_buttons","dateTimePopup","dateTimeSelector","dateTimeSelectorPreview","generateDateTimeModule_container","dateTimeSelectorContent","dateTimeCurrentDate","className","getElementsByClassName","generateDateTimeModule_calender","generateDateTimeModule_time","dateTimeButtonsCancel","dateTimeButtonsClear","dateTimeButtonsOk","dateTimeButtons","setAttribute","generateInterface","dateTimeCalenderYears","dateTimeCalenderMonths","dateTimeCalenderDates","dateTimeCalenderNavDecrement","dateTimeCalenderNavHeader","dateTimeCalenderNavIncrement","dateTimeCalender","dateTimeCalenderNav","decrementSpan","headerSpan","datesTable","incrementSpan","yearsTableRowCol","monthsTableRowCol","j","monthsArray","monthsCounter","yearsTableRow","monthsTableRow","yearsTable","monthsTable","datesTableHeaderCol","datesTableRowCol","datesTableRow","dateTimeTimeHourValue","dateTimeTimeHourDecrement","dateTimeTimeMinIncrement","dateTimeTimeMinValue","dateTimeTimeMinDecrement","dateTimeTimeHour","dateTimeTime","dateTimeTimeMin","dateTimeTimeSeperator","dateTimeTimeHourIncrement","theValue","thePicker","remove","initialDate","initialise","split","pickerYear","pickerMonth","replace","selectedDay","yearRangeMax","show","renderDaysCal","updateCurrentDateTime","showHideCalsForMode","updateTimeSelector","renderMonthsCal","currentDateElem","selectedMonth","min","year","hour","display","daysInMonth","getDaysInMonth","firstWeekDay","getFirstWeekDayInMonth","rowCounter","hourMin","colCounter","monthDayCounter","decrementTime","currentCalGridElem","today","dateModeHeader","renderYearsCal","yearCounter","yearRangeMin","hideMonthsCal","hideYearsCal","decrementcurrentYear","incrementCal","incrementCurrentYear","showDatesCal","showYearsCal","close","set","value","clear","incrementTime","decrementCurrentMonth","selectCalDate","theDay","theMonth","selectCalYear","theYear","decrementCal","changeCalMode","element","theElement","substring","getElementById","window","addEventListener","fixifyFooter","footer","contains","offset","length","marginBottom","stickifyFooter","paddingBottom","clientHeight","minHeight","gallery","showImage","imgElem","overlayElem","src","galleryElem","body","overflow","hideImage","imgClasses","imgContainerClasses","spinner","galleryID","galleryOverlay","galleryOverlayImg","_loop","galleryImgContainer","galleryImage","images","spinnerHolder","spinnerContent","_loop2","children","onclick","fixifyHeader","header","marginTop","slideshow","slideshowElement","imageArray","interval","pauseOnHover","slideshowObj","numberOfSlides","control","currentSlide","counter","loop","hovered","setupSlides","slideshowID","arrowDiv","arrowNext","arrowPrevious","setupArrowNav","slideshowArray","dotDiv","setupDotNav","slide","dotItem","slideNumber","previousCounter","clearTimeout","nextSlide","newSlide","cSlide","nSlide","transitionSlide","updateDotNav","gotoSlide","onmouseover","onmouseout","slideIdPrefix","classes","slidesDiv","img","usrCommand","currentActive","dot1","dot2","previousSlide","currentCounter"],"mappings":"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","file":"yellowPallet-v1.3.2.min.js","sourcesContent":["var analogueClock = (function() {\n  // Clock variables\n  var clockCounter                = 0;\n  var clockArgsArray              = [];\n  var clockRotationCounterArray   = [];\n\n  // Function to create a new analogue clock\n  function create(args) {\n    // Add and setup clock information in storage arrays\n    clockArgsArray[clockCounter] = args;\n    clockRotationCounterArray[clockCounter] = {\n      hourRotationCounter: 0,\n      minuteRotationCounter: 0,\n      secondRotationCounter: 0\n    }\n\n    // Check that the clockID was given\n    if(args.clockID) {\n      buildAnalogueClock(clockCounter);\n      renderAnalogueClock(clockCounter);\n    } else {\n      console.log(\"Analogue clock error - clockID required\");\n    }\n\n    // Increment the clock counter\n    clockCounter++;\n  }\n\n  // Function to generate the HTML elements required for the clock\n  function buildAnalogueClock(clockArgsIndex) {\n    // Variables to hold the clock elements\n    var clockHolder             = elem(\"#\" + clockArgsArray[clockArgsIndex].clockID)\n    var clockFace               = document.createElement(\"div\");\n    var clockHands              = document.createElement(\"div\");\n    var clockFaceMajorMarkers   = document.createElement(\"div\");\n    var clockFaceMinorMarkers   = document.createElement(\"div\");\n    var clockHandPoint          = document.createElement(\"div\");\n    var clockHandHour           = document.createElement(\"div\");\n    var clockHandMinute         = document.createElement(\"div\");\n    var clockHandSecond         = document.createElement(\"div\");\n    var handPointSpan           = document.createElement(\"span\");\n    var handHourSpan            = document.createElement(\"span\");\n    var handMinSpan             = document.createElement(\"span\");\n    var handSecSpan             = document.createElement(\"span\");\n\n    // Add classes to the clock face and hand div elements\n    clockFace.classList.add(\"clock-face\");\n    clockHands.classList.add(\"clock-hands\");\n    clockFaceMajorMarkers.classList.add(\"clock-face-markers\");\n    clockFaceMinorMarkers.classList.add(\"clock-face-markers\");\n\n    // Create the major markers on the clock face - hour markers\n    for(var i = 0; i < 12; i++) {\n      var majorFaceMarker   = document.createElement(\"div\");\n      var markerSpan        = document.createElement(\"span\");\n\n      // If the clock face style wants numbers\n      if(clockArgsArray[clockArgsIndex].clockFace == \"numbers\") {\n        majorFaceMarker.classList.add(\"clock-face-numbers\");\n\n        // Scale the numbers based on the clock width\n        markerSpan.style.fontSize = clockHolder.clientWidth / 8 + \"px\";\n\n        if(i == 0) {\n          markerSpan.innerHTML = \"12\";\n        } else {\n          markerSpan.innerHTML = i;\n        }\n      } else {\n        majorFaceMarker.classList.add(\"clock-face-major-marker\");\n      }\n\n      // Add the elements to the parent elements\n      majorFaceMarker.appendChild(markerSpan);\n      clockFaceMajorMarkers.appendChild(majorFaceMarker);\n    }\n\n    // If no clock face was defined\n    if(!clockArgsArray[clockArgsIndex].clockFace) {\n      // Create the minor markers on the clock face - minute markers\n      for(var i = 0; i < 48; i++) {\n        var minorFaceMarker   = document.createElement(\"div\");\n        var markerSpan        = document.createElement(\"span\");\n\n        // Add classes and add the elements to the parent elements\n        minorFaceMarker.classList.add(\"clock-face-minor-marker\");\n        minorFaceMarker.appendChild(markerSpan);\n        clockFaceMinorMarkers.appendChild(minorFaceMarker);\n      }\n    }\n\n    // Add classes to the hand elements\n    clockHandPoint.classList.add(\"clock-hand-point\");\n    clockHandHour.classList.add(\"clock-hand-hour\");\n    clockHandMinute.classList.add(\"clock-hand-minute\");\n    clockHandSecond.classList.add(\"clock-hand-second\");\n\n    // Setup the chosen tick style if one was defined\n    switch(clockArgsArray[clockArgsIndex].tickStyle) {\n      case \"smooth\":\n        clockHandHour.classList.add(\"smooth-tick\");\n        clockHandMinute.classList.add(\"smooth-tick\");\n        clockHandSecond.classList.add(\"smooth-tick\");\n        break;\n      case \"bounce\":\n        clockHandHour.classList.add(\"bounce-tick\");\n        clockHandMinute.classList.add(\"bounce-tick\");\n        clockHandSecond.classList.add(\"bounce-tick\");\n        break;\n    }\n\n    // Add IDs to the clock hands\n    clockHandHour.id    = clockArgsArray[clockArgsIndex].clockID + \"-hour-hand\";\n    clockHandMinute.id  = clockArgsArray[clockArgsIndex].clockID + \"-minute-hand\";\n    clockHandSecond.id  = clockArgsArray[clockArgsIndex].clockID + \"-second-hand\";\n\n    // Add the elements to their parent elements\n    clockFace.appendChild(clockFaceMajorMarkers);\n    clockFace.appendChild(clockFaceMinorMarkers);\n    clockHandPoint.appendChild(handPointSpan);\n    clockHandHour.appendChild(handHourSpan);\n    clockHandMinute.appendChild(handMinSpan);\n    clockHandSecond.appendChild(handSecSpan);\n    clockHands.appendChild(clockHandPoint);\n    clockHands.appendChild(clockHandHour);\n    clockHands.appendChild(clockHandMinute);\n    clockHands.appendChild(clockHandSecond);\n    clockHolder.appendChild(clockFace);\n    clockHolder.appendChild(clockHands);\n  }\n\n  // Render the clock and make it tick\n  function renderAnalogueClock(clockArgsIndex) {\n    // Get the elements for the clock hands\n    var date        = getClockTime(clockArgsIndex);\n    var hourHand    = elem(\"#\" + clockArgsArray[clockArgsIndex].clockID + \"-hour-hand\");\n    var minuteHand  = elem(\"#\" + clockArgsArray[clockArgsIndex].clockID + \"-minute-hand\");\n    var secondHand  = elem(\"#\" + clockArgsArray[clockArgsIndex].clockID + \"-second-hand\");\n\n    // Set the degree of rotation for the hands\n    var secDegree   = (date.seconds / 60) * 360;\n    var minDegree   = ((date.minutes / 60) * 360) + ((date.seconds / 60) * 6);\n    var hourDegree  = ((date.hours / 12) * 360) + ((date.minutes / 60) * 30) + (date.seconds / 60 * 0.5);\n\n    // Track how many times the hand has rotated\n    if(hourDegree == 0) {clockRotationCounterArray[clockArgsIndex].hourRotationCounter++}\n    if(minDegree == 0)  {clockRotationCounterArray[clockArgsIndex].minuteRotationCounter++}\n    if(secDegree == 0)  {clockRotationCounterArray[clockArgsIndex].secondRotationCounter++}\n\n    // Add the number of previous rotations to the clock hands\n    hourDegree  += clockRotationCounterArray[clockArgsIndex].hourRotationCounter * 720;\n    minDegree   += clockRotationCounterArray[clockArgsIndex].minuteRotationCounter * 360;\n    secDegree   += clockRotationCounterArray[clockArgsIndex].secondRotationCounter * 360;\n\n    // Rotate the hands\n    secondHand.style.transform  = \"rotate(\" + secDegree + \"deg)\";\n    minuteHand.style.transform  = \"rotate(\" + minDegree + \"deg)\";\n    hourHand.style.transform    = \"rotate(\" + hourDegree + \"deg)\";\n\n    // Recall the function after a second\n    setTimeout(renderAnalogueClock, 1000, clockArgsIndex);\n  }\n\n  // Get the time to display on the clock\n  function getClockTime(clockArgsIndex) {\n    var theDate = new Date();\n    var theHours, theMinutes, theSeconds = 0;\n\n    // Offset the time if required\n    if(clockArgsArray[clockArgsIndex].utcOffset) {\n      // Slice up the offset string into its components\n      var plusMinus     = clockArgsArray[clockArgsIndex].utcOffset.slice(0, 1);\n      var hourOffset    = clockArgsArray[clockArgsIndex].utcOffset.slice(1, 3);\n      var minuteOffset  = clockArgsArray[clockArgsIndex].utcOffset.slice(4, 6);\n\n      // Get the current UTC time\n      theHours    = theDate.getUTCHours();\n      theMinutes  = theDate.getUTCMinutes();\n      theSeconds  = theDate.getUTCSeconds();\n\n      // Add or minus time depending on the offset\n      if(plusMinus == \"+\") {\n        theHours    += parseInt(hourOffset);\n        theMinutes  += parseInt(minuteOffset);\n      } else if(plusMinus == \"-\") {\n        theHours    -= parseInt(hourOffset);\n        theMinutes  -= parseInt(minuteOffset);\n      } else {\n        console.log(\"Invalid offset operator - +/- only\");\n      }\n    } else {\n      // Get the current system time\n      theHours    = theDate.getHours();\n      theMinutes  = theDate.getMinutes();\n      theSeconds  = theDate.getSeconds();\n    }\n\n    // Return the time values\n    return {\n      hours   : theHours,\n      minutes : theMinutes,\n      seconds : theSeconds\n    };\n  }\n\n  // Expose public functions\n  return {\n    create: function(args) {return create(args)}\n  }\n})();\n","var consoleLog = (function () {\n  function normal (message)   {console.log(message);}\n  function info (message)     {console.log(\"%c\" + message, \"color: blue\");}\n  function success (message)  {console.log(\"%c\" + message, \"color: green\");}\n  function warning (message)  {console.log(\"%c\" + message, \"color: orange\");}\n  function danger (message)   {console.log(\"%c\" + message, \"color: red\");}\n\n  return {\n    normal:   function (message)  { return normal(message) },\n    info:     function (message)  { return info(message) },\n    success:  function (message)  { return success(message) },\n    warning:  function (message)  { return warning(message) },\n    danger:   function (message)  { return danger(message) }\n  }\n}) ();","////////////////////////////////////////////////////////////////\n// Date Time Functions                                        //\n////////////////////////////////////////////////////////////////\n\nvar dateTime = (function () {\n  /**\n   * Convert the month number into text\n   * @param  {number} month\n   * @return {string}\n   **/\n  function textifyMonth(month) {\n    var months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n    return months[month];\n  }\n\n  /**\n   * Convert the day number into text\n   * @param  {number} day\n   * @return {string}\n   **/\n  function textifyWeekDay(day) {\n    var days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ];\n    return days[day];\n  }\n\n  /**\n   * Returns the time in 12hr format\n   * @param  {Date}        dateObj\n   * @param  {boolean}     showSecs\n   * @param  {boolean}     showAMPM\n   * @return {string}      theTime\n   **/\n  function get12HrTime(dateObj, showSecs, showAMPM) {\n    var hours = (dateObj.getHours() > 12) ? dateObj.getHours() - 12 : dateObj.getHours();\n    var mins = leadZero(dateObj.getMinutes());\n    var secs = leadZero(dateObj.getSeconds());\n    var ampm = (dateObj.getHours() > 12) ? \"PM\" : \"AM\";\n    var theTime;\n\n    theTime = hours + \":\" + mins;\n    if(showSecs === true) {theTime += \":\" + secs}\n    if(showAMPM === true) {theTime += \" \" + ampm}\n    return theTime;\n  }\n\n  /**\n   * Returns the time in 24hr format\n   * @param  {Date}        dateObj\n   * @param  {boolean}     showSecs\n   * @return {string}      theTime\n   **/\n  function get24HrTime(dateObj, showSecs) {\n    var hours = leadZero(dateObj.getHours());\n    var mins = leadZero(dateObj.getMinutes());\n    var secs = leadZero(dateObj.getSeconds());\n    var theTime;\n\n    theTime = hours + \":\" + mins;\n    if(showSecs === true) {theTime += \":\" + secs}\n    return theTime;\n  }\n\n  /**\n   * Add a leading zero is needed\n   * @param  {number} number\n   * @return {string}\n   **/\n  function leadZero(number) {\n    return (number < 10) ? \"0\" + number : number;\n  }\n\n  /**\n   * Returns the date in the format DD/MM/YYYY\n   * @param  {Date}    dateObj\n   * @return {string}\n   **/\n  function getShortDate(dateObj) {\n    var date = leadZero(dateObj.getDate());\n    var month = leadZero(dateObj.getMonth() + 1);\n    var year = dateObj.getFullYear();\n    return date + \"/\" + month + \"/\" + year;\n  }\n\n  /**\n   * Return the date in the format Day Date Month Year\n   * @param  {Date}    dateObj\n   * @return {string}\n   **/\n  function getLongDate(dateObj) {\n    var day = textifyWeekDay(dateObj.getDay());\n    var date = suffixDate(dateObj.getDate());\n    var month = textifyMonth(dateObj.getMonth());\n    var year = dateObj.getFullYear();\n    return day + \" \" + date + \" \" + month + \" \" + year;\n  }\n\n  /**\n   * Add a suffix to the date\n   * @param  {number} date\n   * @return {string} theDate\n   **/\n  function suffixDate(date) {\n    var theDate;\n    switch(date) {\n      case 1:\n      case 21:\n      case 31:\n        theDate = date + \"st\";\n        break;\n      case 2:\n      case 22:\n      case 32:\n        theDate = date + \"nd\";\n        break;\n      case 3:\n      case 23:\n        theDate = date + \"rd\";\n        break;\n      default:\n        theDate = date + \"th\";\n    }\n    return theDate;\n  }\n\n  return {\n    textifyMonth:     function (month)                              { return textifyMonth(month) },\n    textifyWeekDay:   function (day)                                { return textifyWeekDay(day) },\n    get12HrTime:      function (dateObj, showSecs, showAMPM)        {  return get12HrTime(dateObj, showSecs, showAMPM) },\n    get24HrTime:      function (dateObj, showSecs)                  { return get24HrTime(dateObj, showSecs) },\n    leadZero:         function (number)                             { return leadZero(number) },\n    getShortDate:     function (dateObj)                            { return getShortDate(dateObj) },\n    getLongDate:      function (dateObj)                            { return getLongDate(dateObj) },\n    suffixDate:       function (date)                               { return suffixDate(date) }\n  }\n}) ();\n\n////////////////////////////////////////////////////////////////","/** Script to create a date / time picker **/\nvar dateTimePicker = (function() {\n  /*\n    ########################\n    GLOBAL VARIABLES - START\n    ########################\n  */\n  /** Variables used in the render process **/\n  var currentMonth,\n      currentYear,\n      currentMode,\n      yearRangeMin,\n      yearRangeMax,\n\n      /** Variables used to track the user selected date / time **/\n      selectedTimeHour,\n      selectedTimeMin,\n      selectedDate,\n      selectedDay,\n      selectedMonth,\n      selectedYear,\n\n      /** Variables used to store meta data about date / time pickers **/\n      pickerCounter = 0,\n      pickerCurrentPicker,\n      pickerCurrentValue,\n      pickerCurrentPickerID,\n      pickerRootParentArray = [],\n      pickerModeArray = [];\n  /*\n    ######################\n    GLOBAL VARIABLES - END\n    ######################\n  */\n\n  /*\n    ##################################\n    DATE / TIME PICKER BUILDER - START\n    ##################################\n  */\n  /** Create a new date / time picker based on the args given **/\n  function create(args) {\n    if(args.mode && args.dateInputID) {\n      // Increment the picker counter and store the pickers root element ID\n      pickerCounter++;\n      pickerRootParentArray[pickerCounter] = args.dateInputID;\n\n      // Initial setup for picker elements before generation of dialog\n      var dateInputElem   = elem(args.dateInputID),\n          pickerID        = \"dateTimePickerFor_\" + pickerCounter,\n          theInput        = dateInputElem.getElementsByTagName(\"input\")[0];\n\n      theInput.setAttribute(\"onClick\", \"dateTimePicker.show(\" + pickerCounter + \", this.value)\");\n      theInput.setAttribute(\"readonly\", \"readonly\");\n      pickerModeArray[pickerCounter] = args.mode;\n      generateInterface(args.dateInputID, pickerID, args.mode);\n    } else {\n      console.log(\"Date Time Picker - Missing required args\");\n    }\n  }\n\n  /** Generate the dialog based on the requested mode **/\n  function generateInterface(dateInputID, pickerID, mode) {\n    var dateInputElem = elem(dateInputID),\n        dateInputContentContainer;\n\n    // Create and append a container to the input element to hold the interface\n    dateInputElem.appendChild(generateDateTimeModule_container(pickerID));\n    dateInputContentContainer = dateInputElem.getElementsByClassName(\"datetime-selector-content\")[0];\n\n    // Decide on what to show in the interface\n    switch(mode) {\n      case \"datetime\":\n        dateInputContentContainer.appendChild(generateDateTimeModule_calender());\n        dateInputContentContainer.appendChild(generateDateTimeModule_time());\n        break;\n      case \"date\":\n        dateInputContentContainer.appendChild(generateDateTimeModule_calender());\n        break;\n      case \"month\":\n        dateInputContentContainer.appendChild(generateDateTimeModule_calender());\n        break;\n      case \"time\":\n        dateInputContentContainer.appendChild(generateDateTimeModule_time());\n        break;\n    }\n\n    // Append the control buttons to the end of the container\n    dateInputContentContainer.appendChild(generateDateTimeModule_buttons());\n  }\n\n  /** Generate the interface container **/\n  function generateDateTimeModule_container(pickerID) {\n    // Create the container elements\n    var dateTimePopup               = document.createElement(\"div\"),\n        dateTimeSelector            = document.createElement(\"div\"),\n        dateTimeSelectorPreview     = document.createElement(\"div\"),\n        dateTimeSelectorContent     = document.createElement(\"div\"),\n        dateTimeCurrentDate         = document.createElement(\"p\");\n\n    // Assign classes to the selector element based on the mode requested\n    switch(pickerModeArray[pickerCounter]) {\n      case \"datetime\":  dateTimeSelector.className = \"datetime-selector width-6 width-xl-10\"; break;\n      case \"date\":      dateTimeSelector.className = \"datetime-selector width-4 width-xl-8 width-m-10\"; break;\n      case \"month\":     dateTimeSelector.className = \"datetime-selector width-4 width-xl-8 width-m-10\"; break;\n      case \"time\":      dateTimeSelector.className = \"datetime-selector width-3 width-xl-6 width-m-10\"; break;\n    }\n\n    // Assign classes and id's to the other elements\n    dateTimePopup.className             = \"datetime-popup\";\n    dateTimeSelectorPreview.className   = \"col-12 center-align datetime-selector-preview\";\n    dateTimeSelectorContent.className   = \"col-12 datetime-selector-content\";\n    dateTimeCurrentDate.id              = \"datetime-selector-current-date_\" + pickerCounter;\n    dateTimePopup.id                    = pickerID;\n\n    // Append the created elements to their parents a return the finished container\n    dateTimeSelectorPreview.appendChild(dateTimeCurrentDate);\n    dateTimeSelector.appendChild(dateTimeSelectorPreview);\n    dateTimeSelector.appendChild(dateTimeSelectorContent);\n    dateTimePopup.appendChild(dateTimeSelector);\n    return dateTimePopup;\n  }\n\n  /** Generate the buttons interface **/\n  function generateDateTimeModule_buttons() {\n    // Create the button elements\n    var dateTimeButtons           = document.createElement(\"div\"),\n        dateTimeButtonsOk         = document.createElement(\"button\"),\n        dateTimeButtonsCancel     = document.createElement(\"button\"),\n        dateTimeButtonsClear      = document.createElement(\"button\");\n\n    // Assign classes and content to the buttons\n    dateTimeButtons.className         = \"col-12 center-align\";\n    dateTimeButtonsOk.className       = \"btn width-2 width-xl-3\";\n    dateTimeButtonsCancel.className   = \"btn width-2 width-xl-3\";\n    dateTimeButtonsClear.className    = \"btn width-2 width-xl-3\";\n    dateTimeButtonsOk.innerHTML       = \"Ok\";\n    dateTimeButtonsCancel.innerHTML   = \"Cancel\";\n    dateTimeButtonsClear.innerHTML    = \"Clear\";\n\n    // Set an onclick attribute to the buttons\n    dateTimeButtonsOk.setAttribute(\"onClick\", \"dateTimePicker.set()\");\n    dateTimeButtonsCancel.setAttribute(\"onClick\", \"dateTimePicker.close()\");\n    dateTimeButtonsClear.setAttribute(\"onClick\", \"dateTimePicker.clear()\");\n    dateTimeButtonsOk.setAttribute(\"type\", \"button\");\n    dateTimeButtonsCancel.setAttribute(\"type\", \"button\");\n    dateTimeButtonsClear.setAttribute(\"type\", \"button\");\n\n    // Append the buttons to the parent element and return the buttons module\n    dateTimeButtons.appendChild(dateTimeButtonsOk);\n    dateTimeButtons.appendChild(dateTimeButtonsCancel);\n    dateTimeButtons.appendChild(dateTimeButtonsClear);\n    return dateTimeButtons;\n  }\n\n  /** Generate the calender interface **/\n  function generateDateTimeModule_calender() {\n    // Create the calender elements and other variables\n    var dateTimeCalender                = document.createElement(\"div\"),\n        dateTimeCalenderNav             = document.createElement(\"div\"),\n        dateTimeCalenderYears           = document.createElement(\"div\"),\n        dateTimeCalenderMonths          = document.createElement(\"div\"),\n        dateTimeCalenderDates           = document.createElement(\"div\"),\n        dateTimeCalenderNavDecrement    = document.createElement(\"div\"),\n        dateTimeCalenderNavHeader       = document.createElement(\"div\"),\n        dateTimeCalenderNavIncrement    = document.createElement(\"div\"),\n        decrementSpan                   = document.createElement(\"span\"),\n        headerSpan                      = document.createElement(\"span\"),\n        incrementSpan                   = document.createElement(\"span\"),\n        yearsTable                      = document.createElement(\"table\"),\n        monthsTable                     = document.createElement(\"table\"),\n        datesTable                      = document.createElement(\"table\"),\n        datesTableHeader                = document.createElement(\"tr\"),\n        monthsArray                     = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n        weekdayArray                    = [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n        monthsCounter                   = 0;\n\n    // Set classes for the calender elements based on the mode\n    if(pickerModeArray[pickerCounter] !== \"datetime\"){ dateTimeCalender.className = \"col-12\"; }\n    else { dateTimeCalender.className = \"col-8 col-m-12\"; }\n\n    // Set classes and id's to elements\n    dateTimeCalenderNav.className           = \"col-12 date-time-cal-header\";\n    dateTimeCalenderNavDecrement.className  = \"col-1 padding-0 center-align\";\n    dateTimeCalenderNavHeader.className     = \"col-10 padding-0 center-align\";\n    dateTimeCalenderNavIncrement.className  = \"col-1 padding-0 center-align\";\n    decrementSpan.className                 = \"date-mode-decrement\";\n    headerSpan.className                    = \"date-mode-header\";\n    incrementSpan.className                 = \"date-mode-increment\";\n    dateTimeCalenderYears.className         = \"col-12 padding-0 date-cal-years\";\n    dateTimeCalenderMonths.className        = \"col-12 padding-0 date-cal-months\";\n    dateTimeCalenderDates.className         = \"col-12 padding-0 date-time-cal-visible date-cal-days\";\n    headerSpan.id                           = \"date-mode-header_\" + pickerCounter;\n    dateTimeCalenderYears.id                = \"date-cal-years_\" + pickerCounter;\n    dateTimeCalenderMonths.id               = \"date-cal-months_\" + pickerCounter;\n    dateTimeCalenderDates.id                = \"date-cal-days_\" + pickerCounter;\n\n    // Set an onclick attribute to the elements\n    decrementSpan.setAttribute(\"onClick\", \"dateTimePicker.decrementCal()\");\n    headerSpan.setAttribute(\"onClick\", \"dateTimePicker.changeCalMode()\");\n    incrementSpan.setAttribute(\"onClick\", \"dateTimePicker.incrementCal()\");\n\n    // Set the content of the elements\n    decrementSpan.innerHTML   = '&lt;';\n    headerSpan.innerHTML      = 'Month Year';\n    incrementSpan.innerHTML   = '&gt;';\n\n    // Create year and month grids 3 Rows 4 Cols\n    for(var i = 1; i <= 3; i++) {\n      var yearsTableRow   = document.createElement(\"tr\"),\n          monthsTableRow  = document.createElement(\"tr\");\n      for(var j = 0; j < 4; j++) {\n        var yearsTableRowCol  = document.createElement(\"td\"),\n            monthsTableRowCol = document.createElement(\"td\");\n\n        yearsTableRowCol.id           = \"years-\" + i + \"-\" + j + \"_\" + pickerCounter;\n        monthsTableRowCol.id          = \"months-\" + i + \"-\" + j + \"_\" + pickerCounter;\n        monthsTableRowCol.innerHTML   = monthsArray[monthsCounter];\n        monthsCounter++;\n\n        yearsTableRow.appendChild(yearsTableRowCol);\n        monthsTableRow.appendChild(monthsTableRowCol);\n      }\n      yearsTable.appendChild(yearsTableRow);\n      monthsTable.appendChild(monthsTableRow);\n    }\n\n    if(pickerModeArray[pickerCounter] !== \"months\") {\n      // Create date days header 1 Row 7 Cols\n      for(i = 0; i < 7; i++) {\n        var datesTableHeaderCol = document.createElement(\"th\");\n        datesTableHeaderCol.innerHTML = weekdayArray[i];\n        datesTableHeader.appendChild(datesTableHeaderCol);\n      }\n      datesTable.appendChild(datesTableHeader);\n\n      // Create dates grid 6 Rows 7 Cols\n      for(i = 1; i <= 6; i++) {\n        var datesTableRow = document.createElement(\"tr\");\n        for(j = 0; j < 7; j++) {\n          var datesTableRowCol = document.createElement(\"td\");\n          datesTableRowCol.id = \"dates-\" + i + \"-\" + j + \"_\" + pickerCounter;\n          datesTableRow.appendChild(datesTableRowCol);\n        }\n        datesTable.appendChild(datesTableRow);\n      }\n    }\n\n    // Append the calender elements to the calender parent and return the calender module\n    dateTimeCalenderNavDecrement.appendChild(decrementSpan);\n    dateTimeCalenderNavHeader.appendChild(headerSpan);\n    dateTimeCalenderNavIncrement.appendChild(incrementSpan);\n    dateTimeCalenderNav.appendChild(dateTimeCalenderNavDecrement);\n    dateTimeCalenderNav.appendChild(dateTimeCalenderNavHeader);\n    dateTimeCalenderNav.appendChild(dateTimeCalenderNavIncrement);\n    dateTimeCalenderYears.appendChild(yearsTable);\n    dateTimeCalenderMonths.appendChild(monthsTable);\n    dateTimeCalenderDates.appendChild(datesTable);\n    dateTimeCalender.appendChild(dateTimeCalenderNav);\n    dateTimeCalender.appendChild(dateTimeCalenderYears);\n    dateTimeCalender.appendChild(dateTimeCalenderMonths);\n    dateTimeCalender.appendChild(dateTimeCalenderDates);\n    return dateTimeCalender;\n  }\n\n  /** Generate the time interface **/\n  function generateDateTimeModule_time() {\n    // Create time elements\n    var dateTimeTime                = document.createElement(\"div\"),\n        dateTimeTimeHour            = document.createElement(\"div\"),\n        dateTimeTimeMin             = document.createElement(\"div\"),\n        dateTimeTimeSeperator       = document.createElement(\"div\"),\n        dateTimeTimeHourIncrement   = document.createElement(\"span\"),\n        dateTimeTimeHourValue       = document.createElement(\"span\"),\n        dateTimeTimeHourDecrement   = document.createElement(\"span\"),\n        dateTimeTimeMinIncrement    = document.createElement(\"span\"),\n        dateTimeTimeMinValue        = document.createElement(\"span\"),\n        dateTimeTimeMinDecrement    = document.createElement(\"span\");\n\n    // Set classes for the time elements based on the mode\n    if(pickerModeArray[pickerCounter] !== \"datetime\"){ dateTimeTime.className = \"col-12 date-time-time-picker center-align\"; }\n    else { dateTimeTime.className = \"col-4 col-m-12 date-time-time-picker center-align\"; }\n\n    // Set classes and id's to elements\n    dateTimeTimeHour.className              = \"col-4 time-container\";\n    dateTimeTimeMin.className               = \"col-4 time-container\";\n    dateTimeTimeSeperator.className         = \"col-4 time-separator\";\n    dateTimeTimeHourIncrement.className     = \"time-increment\";\n    dateTimeTimeHourDecrement.className     = \"time-decrement\";\n    dateTimeTimeMinIncrement.className      = \"time-increment\";\n    dateTimeTimeMinDecrement.className      = \"time-decrement\";\n    dateTimeTimeHourValue.className         = \"time-hour\";\n    dateTimeTimeMinValue.className          = \"time-min\";\n    dateTimeTimeHourValue.id                = \"time-hour_\" + pickerCounter;\n    dateTimeTimeMinValue.id                 = \"time-min_\" + pickerCounter;\n\n    // Set an onclick attribute to the elements\n    dateTimeTimeHourIncrement.setAttribute(\"onClick\", \"dateTimePicker.incrementTime('hour')\");\n    dateTimeTimeHourDecrement.setAttribute(\"onClick\", \"dateTimePicker.decrementTime('hour')\");\n    dateTimeTimeMinIncrement.setAttribute(\"onClick\", \"dateTimePicker.incrementTime('min')\");\n    dateTimeTimeMinDecrement.setAttribute(\"onClick\", \"dateTimePicker.decrementTime('min')\");\n\n    // Set the content of the elements\n    dateTimeTimeHourIncrement.innerHTML   = '&lt;';\n    dateTimeTimeHourDecrement.innerHTML   = '&lt;';\n    dateTimeTimeMinIncrement.innerHTML    = '&lt;';\n    dateTimeTimeMinDecrement.innerHTML    = '&lt;';\n    dateTimeTimeHourValue.innerHTML       = \"00\";\n    dateTimeTimeSeperator.innerHTML       = \":\";\n    dateTimeTimeMinValue.innerHTML        = \"00\";\n\n    // Append the time elements to the time parent and return the time module\n    dateTimeTimeHour.appendChild(dateTimeTimeHourIncrement);\n    dateTimeTimeHour.appendChild(dateTimeTimeHourValue);\n    dateTimeTimeHour.appendChild(dateTimeTimeHourDecrement);\n    dateTimeTimeMin.appendChild(dateTimeTimeMinIncrement);\n    dateTimeTimeMin.appendChild(dateTimeTimeMinValue);\n    dateTimeTimeMin.appendChild(dateTimeTimeMinDecrement);\n    dateTimeTime.appendChild(dateTimeTimeHour);\n    dateTimeTime.appendChild(dateTimeTimeSeperator);\n    dateTimeTime.appendChild(dateTimeTimeMin);\n    return dateTimeTime;\n  }\n  /*\n    ################################\n    DATE / TIME PICKER BUILDER - END\n    ################################\n  */\n\n  /*\n    ##########################################\n    SHOW SET AND HIDE DATE TIME PICKER - START\n    ##########################################\n  */\n  /* Show the date / time picker */\n  function show(pickerID, theValue) {\n    // Update tracking variables with info about the clicked picker\n    pickerCurrentPicker     = \"#dateTimePickerFor_\" + pickerID;\n    pickerCurrentPickerID   = pickerID;\n    pickerCurrentValue      = theValue;\n\n    // Get the picker element and make it visible\n    var thePicker = elem(pickerCurrentPicker);\n    thePicker.classList.remove(\"datetime-popup-hidden\");\n    thePicker.classList.add(\"datetime-popup-visible\");\n\n    // Initialise and render or update elements based on the pickers mode\n    initialise();\n    switch(pickerModeArray[pickerID]) {\n      case \"datetime\":\n        renderDaysCal();\n        updateCurrentDateTime();\n        updateTimeSelector();\n        showHideCalsForMode();\n        break;\n      case \"date\":\n        renderDaysCal();\n        updateCurrentDateTime();\n        showHideCalsForMode();\n        break;\n      case \"month\":\n        renderMonthsCal();\n        updateCurrentDateTime();\n        showHideCalsForMode();\n        break;\n      case \"time\":\n        updateTimeSelector();\n        break;\n    }\n  }\n\n  /* Hide the date / time picker */\n  function close() {\n    // Get the picker element and make it hidden\n    var thePicker = elem(pickerCurrentPicker);\n    thePicker.classList.add(\"datetime-popup-hidden\");\n    thePicker.classList.remove(\"datetime-popup-visible\");\n  }\n\n  /* Clear the current set date time */\n  function clear() {\n    // Get the input element\n    var dateInputElem   = elem(pickerRootParentArray[pickerCurrentPickerID]),\n        theInput        = dateInputElem.getElementsByTagName(\"input\")[0];\n\n    theInput.value = \"\";\n    close();\n  }\n\n  /* Set the input value to the select date / time then close the picker */\n  function set() {\n    // Get the input element\n    var dateInputElem   = elem(pickerRootParentArray[pickerCurrentPickerID]),\n        theInput        = dateInputElem.getElementsByTagName(\"input\")[0];\n\n    // Update the value of the input element based on the mode\n    switch(pickerModeArray[pickerCurrentPickerID]) {\n      case \"datetime\":\n        theInput.value = selectedYear + \"-\" + dateTime.leadZero(selectedMonth + 1) + \"-\" + dateTime.leadZero(selectedDate) + \" \" +\n          dateTime.leadZero(selectedTimeHour) + \":\" + dateTime.leadZero(selectedTimeMin);\n        break;\n      case \"date\":\n        theInput.value = selectedYear + \"-\" + dateTime.leadZero(selectedMonth + 1) + \"-\" + dateTime.leadZero(selectedDate);\n        break;\n      case \"month\":\n        theInput.value = dateTime.textifyMonth(selectedMonth) + \" \" + selectedYear;\n        break;\n      case \"time\":\n        theInput.value = dateTime.leadZero(selectedTimeHour) + \":\" + dateTime.leadZero(selectedTimeMin);\n        break;\n    }\n\n    // Close the picker\n    close();\n  }\n  /*\n    ########################################\n    SHOW SET AND HIDE DATE TIME PICKER - END\n    ########################################\n  */\n\n  /*\n    #####################################\n    INITIALISE, RENDER AND UPDATE - START\n    #####################################\n  */\n  /* Initialise the date time picker */\n  function initialise() {\n    // Create variables and set the current mode of the calender to dates\n    var initialDate;\n    if(pickerModeArray[pickerCurrentPickerID] === \"month\") {\n      currentMode = \"months\";\n    } else { currentMode = \"dates\"; }\n\n    // If the input has a date value set use that as default otherwise use the date / time\n    if(pickerCurrentValue !== \"\") {\n      if(pickerModeArray[pickerCurrentPickerID] === \"time\") {\n        initialDate = new Date(\"2000-01-01T\" + pickerCurrentValue);\n      } else if (pickerModeArray[pickerCurrentPickerID] === \"month\") {\n        var theDate = \"\";\n        var pickerMonth = pickerCurrentValue.split(' ')[0];\n        var pickerYear = pickerCurrentValue.split(' ')[1];\n\n        theDate += pickerYear;\n        switch (pickerMonth) {\n          case \"January\": theDate += \"-01-01\"; break;\n          case \"February\": theDate += \"-02-01\"; break;\n          case \"March\": theDate += \"-03-01\"; break;\n          case \"April\": theDate += \"-04-01\"; break;\n          case \"May\": theDate += \"-05-01\"; break;\n          case \"June\": theDate += \"-06-01\"; break;\n          case \"July\": theDate += \"-07-01\"; break;\n          case \"August\": theDate += \"-08-01\"; break;\n          case \"September\": theDate += \"-09-01\"; break;\n          case \"October\": theDate += \"-10-01\"; break;\n          case \"November\": theDate += \"-11-01\"; break;\n          case \"December\": theDate += \"-12-01\"; break;\n          default: theDate += \"-01-01\"; break;\n        }\n\n        initialDate = new Date(theDate);\n      } else {\n        initialDate = new Date(pickerCurrentValue.replace(/\\s/, 'T'));\n      }\n    } else {\n      initialDate = new Date();\n    }\n\n    // Set up date / time variables\n    selectedTimeHour  = initialDate.getHours();\n    selectedTimeMin   = initialDate.getMinutes();\n    currentMonth      = initialDate.getMonth();\n    currentYear       = initialDate.getFullYear();\n    selectedDate      = initialDate.getDate();\n    selectedDay       = initialDate.getDay();\n    selectedMonth     = initialDate.getMonth();\n    selectedYear      = initialDate.getFullYear();\n    yearRangeMin      = initialDate.getFullYear() - 5;\n    yearRangeMax      = initialDate.getFullYear() + 6;\n  }\n\n  /* Update the currently selected date / time */\n  function updateCurrentDateTime() {\n    if(selectedDay > 6) selectedDay = 0;\n    if(selectedDay < 0) selectedDay = 6;\n\n    var currentDateElem   = elem(\"#datetime-selector-current-date_\" + pickerCurrentPickerID),\n        date              = dateTime.suffixDate(selectedDate),\n        day               = dateTime.textifyWeekDay(selectedDay),\n        month             = dateTime.textifyMonth(selectedMonth),\n        hour              = dateTime.leadZero(selectedTimeHour),\n        min               = dateTime.leadZero(selectedTimeMin),\n        year              = selectedYear;\n\n    switch(pickerModeArray[pickerCurrentPickerID]) {\n      case \"datetime\":  currentDateElem.innerHTML = day + \" \" + date + \" \" + month + \" \" + year + \" - \" + hour + \":\" + min; break;\n      case \"date\":      currentDateElem.innerHTML = day + \" \" + date + \" \" + month + \" \" + year; break;\n      case \"month\":     currentDateElem.innerHTML = month + \" \" + year; break;\n      case \"time\":      currentDateElem.innerHTML = \"\"; currentDateElem.style.display = \"none\"; break;\n    }\n  }\n\n  /** Time Selector - Start **/\n  /** Get the hour and min elements **/\n  function getTimeHourElem() { return elem(\"#time-hour_\" + pickerCurrentPickerID); }\n  function getTimeMinElem() { return elem(\"#time-min_\" + pickerCurrentPickerID); }\n\n  /** Increment the time value **/\n  function incrementTime(hourMin) {\n    switch(hourMin) {\n      case \"hour\":  selectedTimeHour  = (selectedTimeHour !== 23)  ? selectedTimeHour + 1 : 0; break;\n      case \"min\":   selectedTimeMin   = (selectedTimeMin !== 59)   ? selectedTimeMin + 1 : 0; break;\n    }\n    updateTimeSelector();\n  }\n\n  /** Decrement the time value **/\n  function decrementTime(hourMin) {\n    switch(hourMin) {\n      case \"hour\":  selectedTimeHour  = (selectedTimeHour !== 0)   ? selectedTimeHour - 1 : 23; break;\n      case \"min\":   selectedTimeMin   = (selectedTimeMin !== 0)    ? selectedTimeMin - 1 : 59; break;\n    }\n    updateTimeSelector();\n  }\n\n  /** Update the time view **/\n  function updateTimeSelector() {\n    getTimeHourElem().innerHTML = dateTime.leadZero(selectedTimeHour);\n    getTimeMinElem().innerHTML  = dateTime.leadZero(selectedTimeMin);\n    updateCurrentDateTime();\n  }\n  /** Time Selector - End **/\n\n\n  /** Date Selector **/\n  /** Get the number of days in the month and the first weekday in the month **/\n  function getDaysInMonth(month, year) { return new Date(year, month + 1, 0).getDate(); }\n  function getFirstWeekDayInMonth(month, year) { return new Date(year, month, 1).getDay(); }\n\n  /** Render the calender  **/\n  function renderDaysCal() {\n    // Setup variables\n    var daysInMonth       = getDaysInMonth(currentMonth, currentYear),\n        firstWeekDay      = getFirstWeekDayInMonth(currentMonth, currentYear),\n        rowCounter        = 1,\n        colCounter        = 0,\n        monthDayCounter   = 1,\n        today             = new Date(),\n        dateModeHeader;\n\n    // Setup first week day number\n    firstWeekDay--;\n    if(firstWeekDay === -1) { firstWeekDay = 6; }\n\n    // Set the calender header to show the current month and year\n    dateModeHeader = elem(\"#date-mode-header_\" + pickerCurrentPickerID);\n    dateModeHeader.innerHTML = dateTime.textifyMonth(currentMonth) + \" \" + currentYear;\n\n    // Work through the grid and set the date as required\n    for (var i = 1; i <= 42; i++) {\n      var currentCoords       = rowCounter + \"-\" + colCounter,\n          currentCalGridElem  = elem(\"#dates-\" + currentCoords + \"_\" + pickerCurrentPickerID);\n\n      // Clear the following classes from the element\n      currentCalGridElem.classList.remove(\"cal-grid-day-today\");\n      currentCalGridElem.classList.remove(\"cal-grid-day-disabled\");\n      currentCalGridElem.classList.remove(\"cal-grid-day-selected\");\n\n      // Disable and don't print any data to cells in the first row before the first day of the month OR\n      // Disable and don't print any data to cells after the last day of the month\n      if ((rowCounter === 1 && colCounter < firstWeekDay) || (monthDayCounter > daysInMonth)) {\n        // Disable the cell\n        currentCalGridElem.innerHTML = \"\";\n        currentCalGridElem.classList.add(\"cal-grid-day-disabled\");\n      } else {\n        // Print the date to the cell\n        currentCalGridElem.innerHTML = monthDayCounter;\n        currentCalGridElem.setAttribute(\"onClick\", \"dateTimePicker.selectCalDate(\" + colCounter + \", \" + monthDayCounter + \")\");\n\n        // Check to see if the current cell matches todays date\n        if (monthDayCounter <= daysInMonth) {\n          if((today.getDate() === monthDayCounter) &&\n            (today.getMonth() === currentMonth) &&\n            (today.getFullYear() === currentYear)) {\n            // If the cell is todays date add the today class to it\n            currentCalGridElem.classList.add(\"cal-grid-day-today\");\n          }\n        }\n\n        // Check to see if the current cell is the user selected date\n        if((monthDayCounter === selectedDate) &&\n          (currentMonth === selectedMonth) &&\n          (currentYear === selectedYear)) {\n          // IF the cell is the selected date add the selected class to it\n          currentCalGridElem.classList.add(\"cal-grid-day-selected\");\n        }\n\n        // Increment the month day counter by 1\n        monthDayCounter++;\n      }\n\n      // Update the row and col tracking to move to next cell\n      rowCounter = colCounter === 6 ? rowCounter += 1 : rowCounter;\n      colCounter = colCounter === 6 ? colCounter = 0 : colCounter += 1;\n    }\n  }\n\n  /** Render the months calender **/\n  function renderMonthsCal() {\n    // Setup variables\n    var rowCounter      = 1,\n        colCounter      = 0,\n        today           = new Date(),\n        dateModeHeader;\n\n    // Set the calender header to the current year\n    dateModeHeader            = elem(\"#date-mode-header_\" + pickerCurrentPickerID);\n    dateModeHeader.innerHTML  = currentYear;\n\n    // Loop 12 times\n    for (var i = 0; i < 12; i++) {\n      var currentCoords       = rowCounter + \"-\" + colCounter,\n          currentCalGridElem  = elem(\"#months-\" + currentCoords + \"_\" + pickerCurrentPickerID);\n\n      // Remove classes and set an onclick attribute\n      currentCalGridElem.classList.remove(\"cal-grid-month-today\");\n      currentCalGridElem.classList.remove(\"cal-grid-month-selected\");\n      currentCalGridElem.setAttribute(\"onClick\", \"dateTimePicker.selectCalMonth(\" + i + \")\");\n\n      // Check to see if the current month is the current selected month\n      if ((i === selectedMonth) && (currentYear === selectedYear)) {\n        currentCalGridElem.classList.add(\"cal-grid-month-selected\");\n      }\n\n      // Check to see if the current month is todays month\n      if(today.getFullYear() === currentYear && today.getMonth() === i) {\n        currentCalGridElem.classList.add(\"cal-grid-month-today\");\n      }\n\n      // Increment the row and col counters\n      rowCounter = colCounter === 3 ? rowCounter += 1 : rowCounter;\n      colCounter = colCounter === 3 ? colCounter = 0 : colCounter += 1;\n    }\n  }\n\n  /** Render the years calender **/\n  function renderYearsCal() {\n    var rowCounter      = 1,\n        colCounter      = 0,\n        yearCounter     = yearRangeMin,\n        today           = new Date(),\n        dateModeHeader;\n\n    // Set the calender header to the current year range\n    dateModeHeader            = elem(\"#date-mode-header_\" + pickerCurrentPickerID);\n    dateModeHeader.innerHTML  = yearRangeMin + \" - \" + yearRangeMax;\n\n    // Loop 12 times\n    for (var i = 0; i < 12; i++) {\n      var currentCoords       = rowCounter + \"-\" + colCounter,\n          currentCalGridElem  = elem(\"#years-\" + currentCoords + \"_\" + pickerCurrentPickerID);\n\n      // Remove classes, set onclick attribute and add content\n      currentCalGridElem.classList.remove(\"cal-grid-year-today\");\n      currentCalGridElem.classList.remove(\"cal-grid-year-selected\");\n      currentCalGridElem.innerHTML = yearCounter;\n      currentCalGridElem.setAttribute(\"onClick\", \"dateTimePicker.selectCalYear(\" + yearCounter + \")\");\n\n      // If the current year equals the selected year add the selected class\n      if (yearCounter === selectedYear) { currentCalGridElem.classList.add(\"cal-grid-year-selected\"); }\n\n      // If the current year equals todays year add the today class\n      if(today.getFullYear() === yearCounter) { currentCalGridElem.classList.add(\"cal-grid-year-today\"); }\n\n      // Increment the year and row / col counters\n      yearCounter++;\n      rowCounter = colCounter === 3 ? rowCounter += 1 : rowCounter;\n      colCounter = colCounter === 3 ? colCounter = 0 : colCounter += 1;\n    }\n  }\n\n  /** Decide on what calender to show **/\n  function showHideCalsForMode() {\n    switch(currentMode) {\n      case \"dates\":   showDatesCal(); hideMonthsCal(); hideYearsCal(); renderDaysCal(); break;\n      case \"months\":  showMonthsCal(); hideDatesCal(); hideYearsCal(); renderMonthsCal(); break;\n      case \"years\":   showYearsCal(); hideMonthsCal(); renderYearsCal(); break;\n    }\n  }\n\n  /** Functions to show the calenders **/\n  function showDatesCal()   { elem(\"#date-cal-days_\" + pickerCurrentPickerID).classList.add(\"date-time-cal-visible\"); }\n  function showMonthsCal()  { elem(\"#date-cal-months_\" + pickerCurrentPickerID).classList.add(\"date-time-cal-visible\"); }\n  function showYearsCal()   { elem(\"#date-cal-years_\" + pickerCurrentPickerID).classList.add(\"date-time-cal-visible\"); }\n\n  /** Functions to hide the calenders **/\n  function hideDatesCal()   { elem(\"#date-cal-days_\" + pickerCurrentPickerID).classList.remove(\"date-time-cal-visible\"); }\n  function hideMonthsCal()  { elem(\"#date-cal-months_\" + pickerCurrentPickerID).classList.remove(\"date-time-cal-visible\"); }\n  function hideYearsCal()   { elem(\"#date-cal-years_\" + pickerCurrentPickerID).classList.remove(\"date-time-cal-visible\"); }\n\n  /** Change the current mode of the calender **/\n  function changeCalMode() {\n    switch(currentMode) {\n      case \"dates\":   currentMode = \"months\"; break;\n      case \"months\":  currentMode = \"years\"; break;\n    }\n    showHideCalsForMode();\n  }\n\n  /** Decrement the current calender value **/\n  function decrementCal() {\n    switch(currentMode) {\n      case \"dates\":   decrementCurrentMonth(); renderDaysCal(); break;\n      case \"months\":  decrementcurrentYear(); renderMonthsCal(); break;\n      case \"years\":   decrementYearRange(); renderYearsCal(); break;\n    }\n  }\n\n  /** Increment the current calender value **/\n  function incrementCal() {\n    switch(currentMode) {\n      case \"dates\":   incrementCurrentMonth(); renderDaysCal(); break;\n      case \"months\":  incrementCurrentYear(); renderMonthsCal(); break;\n      case \"years\":   incrementYearRange(); renderYearsCal(); break;\n    }\n  }\n\n  /** Increment the current month **/\n  function incrementCurrentMonth() {\n    if(currentMonth === 11) { incrementCurrentYear(); currentMonth = 0; }\n    else { currentMonth++; }\n  }\n\n  /** Decrement the current month **/\n  function decrementCurrentMonth() {\n    if(currentMonth === 0) { decrementcurrentYear(); currentMonth = 11; }\n    else { currentMonth--; }\n  }\n\n  /** Increment and Decrement current year functions **/\n  function incrementCurrentYear() { currentYear++; }\n  function decrementcurrentYear() { currentYear--; }\n\n  /** Increment current year range **/\n  function incrementYearRange() {\n    yearRangeMin += 12;\n    yearRangeMax += 12;\n  }\n\n  /** Decrement current year range **/\n  function decrementYearRange() {\n    yearRangeMin -= 12;\n    yearRangeMax -= 12;\n  }\n\n  /** Update the user selected date **/\n  function selectCalDate(theDay, theDate) {\n    selectedDay     = theDay + 1;\n    selectedDate    = theDate;\n    selectedMonth   = currentMonth;\n    selectedYear    = currentYear;\n    renderDaysCal();\n    updateCurrentDateTime();\n  }\n\n  /** Update the user select month and go back to the dates calender **/\n  function selectCalMonth(theMonth) {\n    currentMonth  = theMonth;\n\n    if(pickerModeArray[pickerCurrentPickerID] === \"month\") {\n      selectedMonth   = currentMonth;\n      selectedYear    = currentYear;\n      renderMonthsCal();\n      updateCurrentDateTime();\n    } else {\n      currentMode   = \"dates\";\n      showHideCalsForMode();\n    }\n  }\n\n  /** Update the user selected year and go back to the months calender **/\n  function selectCalYear(theYear) {\n    currentYear   = theYear;\n    currentMode   = \"months\";\n    showHideCalsForMode();\n  }\n  /*\n    ###################################\n    INITIALISE, RENDER AND UPDATE - END\n    ###################################\n  */\n\n\n  /*\n    ################################\n    PUBLIC EXPOSED FUNCTIONS - START\n    ################################\n  */\n  return {\n    create:             function (args) {return create(args)},\n    show:               function (id, value) {return show(id, value)},\n    close:              function () {return close()},\n    set:                function () {return set()},\n    clear:              function () {return clear()},\n\n    incrementTime:      function (hourMin) {return incrementTime(hourMin)},\n    decrementTime:      function (hourMin) {return decrementTime(hourMin)},\n\n    selectCalDate:      function (theDay, theDate) {return selectCalDate(theDay, theDate)},\n    selectCalMonth:     function (theMonth) {return selectCalMonth(theMonth)},\n    selectCalYear:      function (theYear) {return selectCalYear(theYear)},\n    incrementCal:       function () {return incrementCal()},\n    decrementCal:       function () {return decrementCal()},\n    changeCalMode:      function () {return changeCalMode()}\n  }\n  /*\n    ##############################\n    PUBLIC EXPOSED FUNCTIONS - END\n    ##############################\n  */\n})();\n","////////////////////////////////////////////////////////////////\n// Element Selector                                           //\n////////////////////////////////////////////////////////////////\n\n/**\n * Return the element passed by its ID\n * @param  {string} element\n * @return {Object} theElement\n **/\nfunction elem(element) {\n  var theElement;\n\n  if(element.substring(0, 1) === '.') {\n    theElement = document.getElementsByClassName(element.split('.')[1]);\n  } else if(element.substring(0, 1) === '#') {\n    theElement = document.getElementById(element.split('#')[1]);\n  } else {\n    theElement = document.getElementsByTagName(element);\n  }\n\n  return theElement;\n}\n\n////////////////////////////////////////////////////////////////","////////////////////////////////////////////////////////////////\n// Footer Scripts                                             //\n////////////////////////////////////////////////////////////////\n\n/**\n * Fix a footer to the bottom of the page\n */\n//window.onload = fixifyFooter();\nwindow.addEventListener(\"DOMContentLoaded\", fixifyFooter);\nwindow.addEventListener(\"resize\", fixifyFooter);\nfunction fixifyFooter() {\n  var footer = document.getElementsByTagName(\"footer\");\n\n  for(var i = 0; i < footer.length; i++) {\n    if(footer[i].classList.contains(\"fixed-footer\")) {\n      var offset = footer[i].clientHeight;\n      document.getElementsByTagName(\"body\")[0].style.marginBottom = offset + \"px\";\n    }\n  }\n}\n\n/**\n * Stick a footer to the bottom of the page\n */\n//window.ready = stickifyFooter();\nwindow.addEventListener(\"DOMContentLoaded\", stickifyFooter);\nwindow.addEventListener(\"resize\", stickifyFooter);\nfunction stickifyFooter() {\n  var footer = document.getElementsByTagName(\"footer\");\n\n  for(var i = 0; i < footer.length; i++) {\n    if(footer[i].classList.contains(\"sticky-footer\")) {\n      var offset = footer[i].clientHeight;\n      document.getElementsByTagName(\"body\")[0].style.paddingBottom = offset + \"px\";\n      document.getElementsByTagName(\"html\")[0].style.minHeight = \"100%\";\n      document.getElementsByTagName(\"html\")[0].style.position = \"relative\";\n    }\n  }\n}\n\n////////////////////////////////////////////////////////////////","////////////////////////////////////////////////////////////////\n// Gallery Functions                                          //\n////////////////////////////////////////////////////////////////\n\nvar gallery = (function () {\n  /**\n   * Setup the elements needed for the gallery to work\n   * @param args\n   */\n  function create(args) {\n    var imgClasses          = (args.imgClasses)           ? args.imgClasses           : \"\";\n    var imgContainerClasses = (args.imgContainerClasses)  ? args.imgContainerClasses  : \"\";\n    var spinner             = (args.spinner)              ? args.spinner              : \"\";\n    var images              = (args.images)               ? args.images               : [];\n    var galleryID           = (args.galleryID)            ? args.galleryID            : \"\";\n\n    var galleryElem           = elem(galleryID);\n    var galleryOverlay        = document.createElement(\"div\");\n    var galleryOverlayImg     = document.createElement(\"img\");\n\n    galleryOverlayImg.className = \"bordered-img\";\n    galleryOverlay.className    = \"gallery-overlay\";\n    galleryOverlay.onclick = function () {\n      hideImage(galleryOverlay);\n    };\n\n    galleryElem.appendChild(galleryOverlay);\n    galleryOverlay.appendChild(galleryOverlayImg);\n\n    // Loop each gallery image\n    for(var i = 0; i < images.length; i++) {\n      const galleryImgContainer = document.createElement(\"div\");\n      const galleryImage        = document.createElement(\"img\");\n\n      galleryImgContainer.className = imgContainerClasses;\n      galleryImage.className        = imgClasses;\n      galleryImage.src              = images[i];\n\n      if(spinner) {\n        galleryImgContainer.classList.add(\"relative\");\n        const spinnerHolder = document.createElement(\"div\");\n        const spinnerContent = document.createElement(\"div\");\n\n        spinnerHolder.className = \"spinner\";\n        spinnerContent.className = spinner;\n\n        galleryImgContainer.appendChild(spinnerHolder);\n        spinnerHolder.appendChild(spinnerContent);\n\n        if(spinner) {\n          galleryImage.classList.add(\"opacity-0\");\n        }\n\n        galleryImage.onload = function () {\n          galleryImage.classList.remove(\"opacity-0\");\n        }\n      }\n\n      galleryElem.appendChild(galleryImgContainer);\n      galleryImgContainer.appendChild(galleryImage);\n    }\n\n    // Loop each image in gallery\n    for(var j = 1; j < (galleryElem.children.length); j++) {\n      const imgElem = galleryElem.children[j];\n\n      imgElem.onclick = function() {\n        showImage(imgElem, galleryOverlay);\n      };\n    }\n  }\n\n  /**\n   * Run when a gallery image is clicked show the overlay\n   * @param imgElem\n   * @param overlayElem\n   */\n  function showImage(imgElem, overlayElem) {\n    overlayElem.getElementsByTagName(\"img\")[0].src = imgElem.getElementsByTagName(\"img\")[0].src;\n    overlayElem.classList.remove(\"gallery-overlay-hidden\");\n    overlayElem.classList.add(\"gallery-overlay-visible\");\n    document.body.style.overflow = \"hidden\";\n  }\n\n  /**\n   * Run when the gallery overlay is clicked to hide the overlay\n   * @param overlayElem\n   */\n  function hideImage(overlayElem) {\n    overlayElem.classList.add(\"gallery-overlay-hidden\");\n    overlayElem.classList.remove(\"gallery-overlay-visible\");\n    document.body.style.overflow = \"\";\n  }\n  \n  return {\n    create:     function (args) { return create(args) },\n    showImage:  function (imgElem, overlayElem) { return showImage(imgElem, overlayElem) },\n    hideImage:  function (overlayElem) { return hideImage(overlayElem) }\n  }\n}) ();\n\n////////////////////////////////////////////////////////////////","////////////////////////////////////////////////////////////////\n// Header Scripts                                             //\n////////////////////////////////////////////////////////////////\n\n/**\n * Fix a header to the top of the page\n */\nwindow.addEventListener(\"DOMContentLoaded\", fixifyHeader);\nwindow.addEventListener(\"resize\", fixifyHeader);\nfunction fixifyHeader() {\n  var header = document.getElementsByTagName(\"header\");\n\n  for(var i = 0; i < header.length; i++) {\n    if(header[i].classList.contains(\"fixed-header\")) {\n      var offset = header[i].clientHeight;\n      document.getElementsByTagName(\"body\")[0].style.marginTop = offset + \"px\";\n    }\n  }\n}\n\n////////////////////////////////////////////////////////////////","////////////////////////////////////////////////////////////////\n// Slideshow Scripts                                          //\n////////////////////////////////////////////////////////////////\n\nvar slideshow = (function () {\n  // Global array to hold slideshows\n  var slideshowArray = [];\n\n  /**\n   * Create a slideshow\n   * @param args\n   */\n  function create(args) {\n    var slideshowElement = elem(args['elemID']);\n    var imageArray = args['imageArray'];\n\n    // Setup args\n    var interval \t    = (args['interval']) \t    ? args['interval'] \t    : 1500;\n    var style \t\t    = (args['style']) \t\t    ? args['style'] \t\t    : \"\";\n    var control\t\t    = (args['control'])\t\t    ? args['control']\t\t    : \"\";\n    var pauseOnHover  = true;\n\n    if(args['pauseOnHover'] === false) {\n      pauseOnHover = false;\n    }\n\n    // Store slideshow in array\n    var slideshowObj = {};\n    slideshowObj.id = slideshowElement.id;\n    slideshowObj.numberOfSlides = imageArray.length;\n    slideshowObj.imageArray = imageArray;\n    slideshowObj.interval = interval;\n    slideshowObj.style = style;\n    slideshowObj.control = control;\n    slideshowObj.currentSlide = 0;\n    slideshowObj.counter = 0;\n    slideshowObj.loop = null;\n    slideshowObj.hovered = false;\n    slideshowObj.pauseOnHover = pauseOnHover;\n    slideshowArray[slideshowElement.id] = slideshowObj;\n\n    // Add slides to slideshow\n    switch(style) {\n      case \"fade\":\n        slideshowElement.appendChild(setupSlides(slideshowElement.id, \"slide-fade\"));\n        break;\n      default:\n        slideshowElement.appendChild(setupSlides(slideshowElement.id, \"\"));\n    }\n\n    // Add controls if required\n    if(control === \"arrows\") {\n      slideshowElement.appendChild(setupArrowNav(slideshowElement.id));\n    } else if(control === \"dots\") {\n      slideshowElement.appendChild(setupDotNav(slideshowElement.id));\n    }\n\n    if(pauseOnHover) {\n      slideshowElement.onmouseover = function () {\n        slideshowObj.hovered = true;\n        clearTimeout(slideshowObj.loop);\n      };\n\n      slideshowElement.onmouseout = function () {\n        slideshowObj.hovered = false;\n        slideshowObj.loop = setTimeout(nextSlide, slideshowObj.interval, slideshowObj.id, false);\n      };\n    }\n\n    // Run the slideshow\n    nextSlide(slideshowObj.id, false);\n  }\n\n  /**\n   * Create a div with the provided images\n   * @param slideIdPrefix\n   * @param classes\n   * @returns {Element}\n   */\n  function setupSlides(slideIdPrefix, classes) {\n    var slidesDiv \t\t= document.createElement(\"div\");\n    var slideshowObj \t= slideshowArray[slideIdPrefix];\n    slidesDiv.className = \"slides\";\n\n    // Loop through the images and create an img element\n    for(var i = 0; i < slideshowObj.imageArray.length; i++) {\n      var img = document.createElement(\"img\");\n      if(i === 0) {\n        img.className = \"slide-visible \" + classes\n      } else {\n        img.className = \"slide-hidden \" + classes;\n      }\n      img.id = slideIdPrefix + '-' + i;\n      img.src = slideshowObj.imageArray[i];\n      slidesDiv.appendChild(img);\n    }\n\n    return slidesDiv;\n  }\n\n  /**\n   * Creates dot navigation at bottom of slideshow\n   * @param slideshowID\n   * @returns {Element}\n   */\n  function setupDotNav(slideshowID) {\n    var slideshowObj = slideshowArray[slideshowID];\n    var dotDiv = document.createElement(\"div\");\n    dotDiv.className = \"dot-controls\";\n\n    for(var i = 0; i < slideshowObj.numberOfSlides; i++) {\n      const slide = i;\n      var dotItem = document.createElement(\"div\");\n      dotItem.id = slideshowObj.id + \"-dot-\" + i;\n      if(i === 0) {dotItem.className = \"dot-active\";}\n      dotItem.onclick = function () {\n        gotoSlide(slideshowObj.id, slide);\n      };\n      dotDiv.appendChild(dotItem);\n    }\n\n    return dotDiv;\n  }\n\n  /**\n   * Creates left and right arrow navigation\n   * @param slideshowID\n   * @returns {Element}\n   */\n  function setupArrowNav(slideshowID) {\n    var arrowDiv \t\t\t= document.createElement(\"div\");\n    var arrowNext \t\t= document.createElement(\"div\");\n    var arrowPrevious = document.createElement(\"div\");\n\n    arrowDiv.className \t\t\t= \"arrow-controls\";\n    arrowNext.className \t\t= \"next-slide\";\n    arrowPrevious.className = \"previous-slide\";\n\n    arrowPrevious.innerHTML = \"<span onclick=\\\"slideshow.previousSlide(\\'\" + slideshowID + \"\\')\\\">V</span>\";\n    arrowNext.innerHTML\t\t\t= \"<span onclick=\\\"slideshow.nextSlide(\\'\" + slideshowID + \"\\', \" + true + \")\\\">V</span>\";\n\n    arrowDiv.appendChild(arrowPrevious);\n    arrowDiv.appendChild(arrowNext);\n    return arrowDiv;\n  }\n\n  /**\n   * Progress to the next slide\n   * @param slideshowID\n   * @param usrCommand\n   */\n  function nextSlide(slideshowID, usrCommand) {\n    var slideshowObj = slideshowArray[slideshowID];\n    clearTimeout(slideshowObj.loop);\n\n    // Don't progress if the mouse is hovered over it unless overrided with usrCommand\n    if(!slideshowObj.hovered || usrCommand) {\n      // Fetch the required slide elements\n      var currentActive = ((slideshowObj.counter - 1) < 0) ? slideshowObj.numberOfSlides - 1 : slideshowObj.counter - 1;\n      var currentSlide = elem(\"#\" + slideshowObj.id + \"-\" + currentActive);\n      var newSlide = elem(\"#\" + slideshowObj.id + \"-\" + slideshowObj.counter);\n\n      transitionSlide(currentSlide, newSlide);\n      if(slideshowObj.control === \"dots\") {\n        updateDotNav(slideshowObj.id, currentActive, slideshowObj.counter);\n      }\n\n      slideshowObj.currentSlide = slideshowObj.counter;\n      slideshowObj.counter = (slideshowObj.counter < slideshowObj.numberOfSlides - 1) ? slideshowObj.counter + 1 : 0;\n    }\n\n    // Reset the timer to progress the slides\n    slideshowObj.loop = setTimeout(nextSlide, slideshowObj.interval, slideshowObj.id, false);\n  }\n\n  /**\n   * Show the previous slide\n   * @param slideshowID\n   */\n  function previousSlide(slideshowID) {\n    var slideshowObj = slideshowArray[slideshowID];\n    clearTimeout(slideshowObj.loop);\n\n    // Fetch the required slide elements\n    var currentCounter = (slideshowObj.counter - 1 < 0) ? slideshowObj.numberOfSlides - 1 : slideshowObj.counter - 1;\n    var previousCounter = (currentCounter - 1 < 0) ? slideshowObj.numberOfSlides - 1 : currentCounter - 1;\n    var currentSlide = elem(\"#\" + slideshowObj.id + \"-\" + currentCounter);\n    var newSlide = elem(\"#\" + slideshowObj.id + \"-\" + previousCounter);\n    transitionSlide(currentSlide, newSlide);\n\n    // Set the counter and reset the timer to progress the slides\n    slideshowObj.counter = previousCounter;\n    slideshowObj.counter = (slideshowObj.counter < slideshowObj.numberOfSlides - 1) ? slideshowObj.counter + 1 : 0;\n    slideshowObj.loop = setTimeout(nextSlide, slideshowObj.interval, slideshowObj.id, false);\n  }\n\n  /**\n   * Show the requested slide\n   * @param slideshowID\n   * @param slideNumber\n   */\n  function gotoSlide(slideshowID, slideNumber) {\n    var slideshowObj = slideshowArray[slideshowID];\n\n    if(slideshowObj.pauseOnHover) {\n      clearTimeout(slideshowObj.loop);\n    } else {\n      clearTimeout(slideshowObj.loop);\n      slideshowObj.loop = setTimeout(nextSlide, slideshowObj.interval, slideshowObj.id, false);\n    }\n\n    // Fetch slide numbers\n    var currentSlide = slideshowObj.currentSlide;\n    var newSlide = slideNumber;\n\n    // Update the slideshow counter to the new slide number\n    slideshowObj.counter = newSlide;\n    slideshowObj.currentSlide = newSlide;\n\n    // Transition the slide and update the nav dots\n    var cSlide = elem(\"#\" + slideshowObj.id + \"-\" + currentSlide);\n    var nSlide = elem(\"#\" + slideshowObj.id + \"-\" + newSlide);\n    transitionSlide(cSlide, nSlide);\n    updateDotNav(slideshowObj.id, currentSlide, newSlide);\n    slideshowObj.counter = (newSlide + 1 > slideshowObj.numberOfSlides - 1) ? 0 : newSlide + 1 ;\n  }\n\n  /**\n   * Transition between the given slides\n   * @param currentSlide\n   * @param newSlide\n   */\n  function transitionSlide(currentSlide, newSlide) {\n    currentSlide.classList.remove(\"slide-visible\");\n    currentSlide.classList.add(\"slide-hidden\");\n    newSlide.classList.remove(\"slide-hidden\");\n    newSlide.classList.add(\"slide-visible\");\n  }\n\n  function updateDotNav(slideshowID, currentSlide, newSlide) {\n    var dot1 = elem(\"#\" + slideshowID + \"-dot-\" + currentSlide);\n    var dot2 = elem(\"#\" + slideshowID + \"-dot-\" + newSlide);\n\n    dot1.classList.remove(\"dot-active\");\n    dot2.classList.add(\"dot-active\");\n  }\n  \n  return {\n    create: function (args) { return create(args) },\n    nextSlide: function (slideshowID, usrCommand) { return nextSlide(slideshowID, usrCommand) },\n    previousSlide: function(slideshowID) { return previousSlide(slideshowID) }\n  }\n}) ();\n\n////////////////////////////////////////////////////////////////"]}