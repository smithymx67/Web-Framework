{"version":3,"sources":["lib.js"],"names":["elem","element","theElement","document","getElementsByClassName","split","startsWith","getElementById","textifyMonth","month","textifyWeekDay","day","theTime","get12HrTime","dateObj","showSecs","showAMPM","hours","getHours","mins","leadZero","getMinutes","secs","getSeconds","ampm","get24HrTime","number","date","suffixDate","getFullYear","theDate","getDay","getDate","getMonth","window","onload","fixifyHeader","header","getElementsByTagName","i","length","classList","contains","offset","clientHeight","style","marginTop","fixifyFooter","footer","stickifyFooter","marginBottom","paddingBottom","minHeight","slideshowArray","position","slideshowObj","imageArray","args","counter","loop","hovered","id","slideshowElement","numberOfSlides","appendChild","interval","currentSlide","control","setupArrowNav","onmouseover","setupSlides","clearTimeout","setupDotNav","onmouseout","slideIdPrefix","nextSlide","img","classes","slidesDiv","className","createElement","slideshowID","dotDiv","dotItem","onclick","gotoSlide","_loop","arrowPrevious","arrowDiv","innerHTML","arrowNext","currentActive","newSlide","usrCommand","transitionSlide","updateDotNav","previousSlide","setTimeout","previousCounter","slideNumber","cSlide","remove","dot1","dot2","add","consoleLog","message","console","log"],"mappings":"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","file":"lib.min.js","sourcesContent":["// JavaScript Framework\n// Author: Sam Smith (smithymx67)\n// Website: https://samsmith.me\n// Version: 1.0.0\n\n////////////////////////////////////////////////////////////////\n// Element Selector                                           //\n////////////////////////////////////////////////////////////////\n\n/**\n* Return the element passed by its ID\n* @param  {string} element\n* @return {Object} theElement\n**/\nfunction elem(element) {\n  let theElement;\n  \n  if(element.startsWith('.')) {\n    theElement = document.getElementsByClassName(element.split('.')[1]);\n  } else if(element.startsWith('#')) {\n    theElement = document.getElementById(element.split('#')[1]);\n  } else {\n    theElement = document.getElementsByTagName(element);\n  }\n  \n  return theElement;\n}\n\n////////////////////////////////////////////////////////////////\n\n\n////////////////////////////////////////////////////////////////\n// Date Time Functions                                        //\n////////////////////////////////////////////////////////////////\n\n/**\n * Convert the month number into text\n * @param  {number} month\n * @return {string}\n **/\nfunction textifyMonth(month) {\n  let months = [\n    \"January\",\n    \"Febuary\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n  return months[month];\n}\n\n/**\n * Convert the day number into text\n * @param  {number} day\n * @return {string}\n **/\nfunction textifyWeekDay(day) {\n  let days = [\n\t  \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n\treturn days[day];\n}\n\n/**\n * Returns the time in 12hr format\n * @param  {Date}        dateObj\n * @param  {boolean}     showSecs\n * @param  {boolean}     showAMPM\n * @return {string}      theTime\n **/\nfunction get12HrTime(dateObj, showSecs, showAMPM) {\n  let hours = (dateObj.getHours() > 12) ? dateObj.getHours() - 12 : dateObj.getHours();\n  let mins = leadZero(dateObj.getMinutes());\n  let secs = leadZero(dateObj.getSeconds());\n  let ampm = (dateObj.getHours() > 12) ? \"PM\" : \"AM\";\n  let theTime;\n\n  theTime = hours + \":\" + mins;\n  if(showSecs === true) {theTime += \":\" + secs}\n  if(showAMPM === true) {theTime += \" \" + ampm}\n  return theTime;\n}\n\n/**\n * Returns the time in 24hr format\n * @param  {Date}        dateObj\n * @param  {boolean}     showSecs\n * @return {string}      theTime\n **/\nfunction get24HrTime(dateObj, showSecs) {\n  let hours = leadZero(dateObj.getHours());\n  let mins = leadZero(dateObj.getMinutes());\n  let secs = leadZero(dateObj.getSeconds());\n  let theTime;\n\n  theTime = hours + \":\" + mins;\n  if(showSecs === true) {theTime += \":\" + secs}\n  return theTime;\n}\n\n/**\n * Add a leading zero is needed\n * @param  {number} number\n * @return {string}\n **/\nfunction leadZero(number) {\n  return (number < 10) ? \"0\" + number : number;\n}\n\n/**\n * Returns the date in the format DD/MM/YYYY\n * @param  {Date}    dateObj\n * @return {string}\n **/\nfunction getShortDate(dateObj) {\n  let date = leadZero(dateObj.getDate());\n  let month = leadZero(dateObj.getMonth() + 1);\n  let year = dateObj.getFullYear();\n  return date + \"/\" + month + \"/\" + year;\n}\n\n/**\n * Return the date in the format Day Date Month Year\n * @param  {Date}    dateObj\n * @return {string}\n **/\nfunction getLongDate(dateObj) {\n  let day = textifyWeekDay(dateObj.getDay());\n  let date = suffixDate(dateObj.getDate());\n  let month = textifyMonth(dateObj.getMonth());\n  let year = dateObj.getFullYear();\n  return day + \" \" + date + \" \" + month + \" \" + year;\n}\n\n/**\n * Add a suffix to the date\n * @param  {number} date\n * @return {string} theDate\n **/\nfunction suffixDate(date) {\n  let theDate;\n  switch(date) {\n    case 1:\n    case 21:\n    case 31:\n      theDate = date + \"st\";\n      break;\n    case 2:\n    case 22:\n    case 32:\n      theDate = date + \"nd\";\n      break;\n    case 3:\n    case 23:\n      theDate = date + \"rd\";\n      break;\n    default:\n      theDate = date + \"th\";\n  }\n  return theDate;\n}\n\n////////////////////////////////////////////////////////////////\n\n\n////////////////////////////////////////////////////////////////\n// Header Scripts                                             //\n////////////////////////////////////////////////////////////////\n\n/**\n * Fix a header to the top of the page\n */\nwindow.onload = fixifyHeader();\nfunction fixifyHeader() {\n  let header = document.getElementsByTagName(\"header\");\n\n  for(let i = 0; i < header.length; i++) {\n    if(header[i].classList.contains(\"fixed-header\")) {\n      let offset = header[i].clientHeight;\n      document.getElementsByTagName(\"body\")[0].style.marginTop = offset + \"px\";\n    }\n  }\n}\n\n////////////////////////////////////////////////////////////////\n\n\n////////////////////////////////////////////////////////////////\n// Footer Scripts                                             //\n////////////////////////////////////////////////////////////////\n\n/**\n * Fix a footer to the bottom of the page\n */\nwindow.onload = fixifyFooter();\nfunction fixifyFooter() {\n  let footer = document.getElementsByTagName(\"footer\");\n\n  for(let i = 0; i < footer.length; i++) {\n    if(footer[i].classList.contains(\"fixed-footer\")) {\n      let offset = footer[i].clientHeight;\n      document.getElementsByTagName(\"body\")[0].style.marginBottom = offset + \"px\";\n    }\n  }\n}\n\n/**\n * Stick a footer to the bottom of the page\n */\nwindow.onload = stickifyFooter();\nfunction stickifyFooter() {\n  let footer = document.getElementsByTagName(\"footer\");\n\n  for(let i = 0; i < footer.length; i++) {\n    if(footer[i].classList.contains(\"sticky-footer\")) {\n      let offset = footer[i].clientHeight;\n      document.getElementsByTagName(\"body\")[0].style.paddingBottom = offset + \"px\";\n      document.getElementsByTagName(\"html\")[0].style.minHeight = \"100%\";\n      document.getElementsByTagName(\"html\")[0].style.position = \"relative\";\n    }\n  }\n}\n\n////////////////////////////////////////////////////////////////\n\n\n////////////////////////////////////////////////////////////////\n// Slideshow Scripts                                          //\n////////////////////////////////////////////////////////////////\n\n// Global array to hold slideshows\nlet slideshowArray = [];\n\n/**\n * Create a slideshow\n * @param element\n * @param imageArray\n * @param args\n */\nfunction createSlideshow(element, imageArray, args) {\n  let slideshowElement = elem(element);\n\n  // Setup args\n  let interval \t= (args['interval']) \t? args['interval'] \t: 1500;\n  let style \t\t= (args['style']) \t\t? args['style'] \t\t: \"\";\n  let control\t\t= (args['control'])\t\t? args['control']\t\t: \"\";\n\n  // Store slideshow in array\n  let slideshowObj = {};\n  slideshowObj.id = slideshowElement.id;\n  slideshowObj.numberOfSlides = imageArray.length;\n  slideshowObj.imageArray = imageArray;\n  slideshowObj.interval = interval;\n  slideshowObj.style = style;\n  slideshowObj.control = control;\n  slideshowObj.currentSlide = 0;\n  slideshowObj.counter = 0;\n  slideshowObj.loop = null;\n  slideshowObj.hovered = false;\n  slideshowArray[slideshowElement.id] = slideshowObj;\n\n  // Add slides to slideshow\n  switch(style) {\n    case \"fade\":\n      slideshowElement.appendChild(setupSlides(slideshowElement.id, \"slide-fade\"));\n      break;\n    default:\n      slideshowElement.appendChild(setupSlides(slideshowElement.id, \"\"));\n  }\n\n\t// Add controls if required\n  if(control === \"arrows\") {\n    slideshowElement.appendChild(setupArrowNav(slideshowElement.id));\n  } else if(control === \"dots\") {\n    slideshowElement.appendChild(setupDotNav(slideshowElement.id));\n  }\n\n  slideshowElement.onmouseover = function () {\n    slideshowObj.hovered = true;\n    clearTimeout(slideshowObj.loop);\n  };\n\n  slideshowElement.onmouseout = function () {\n    slideshowObj.hovered = false;\n    slideshowObj.loop = setTimeout(nextSlide, slideshowObj.interval, slideshowObj.id, false);\n  };\n\n  // Run the slideshow\n  nextSlide(slideshowObj.id, false);\n}\n\n/**\n * Create a div with the provided images\n * @param slideIdPrefix\n * @param classes\n * @returns {Element}\n */\nfunction setupSlides(slideIdPrefix, classes) {\n  let slidesDiv \t\t= document.createElement(\"div\");\n  let slideshowObj \t= slideshowArray[slideIdPrefix];\n  slidesDiv.className = \"slides\";\n\n  // Loop through the images and create an img element\n  for(let i = 0; i < slideshowObj.imageArray.length; i++) {\n    let img = document.createElement(\"img\");\n    if(i === 0) {\n      img.className = \"slide-visible \" + classes\n    } else {\n      img.className = \"slide-hidden \" + classes;\n\t\t}\n    img.id = slideIdPrefix + '-' + i;\n    img.src = slideshowObj.imageArray[i];\n    slidesDiv.appendChild(img);\n  }\n\n  return slidesDiv;\n}\n\n/**\n * Creates dot navigation at bottom of slideshow\n * @param slideshowID\n * @returns {Element}\n */\nfunction setupDotNav(slideshowID) {\n  let slideshowObj = slideshowArray[slideshowID];\n  let dotDiv = document.createElement(\"div\");\n  dotDiv.className = \"dot-controls\";\n\n  for(let i = 0; i < slideshowObj.numberOfSlides; i++) {\n    let dotItem = document.createElement(\"div\");\n    dotItem.id = slideshowObj.id + \"-dot-\" + i;\n    if(i === 0) {dotItem.className = \"dot-active\";}\n    dotItem.onclick = function () {\n      gotoSlide(slideshowObj.id, i);\n    };\n    dotDiv.appendChild(dotItem);\n  }\n\n  return dotDiv;\n}\n\n/**\n * Creates left and right arrow navigation\n * @param slideshowID\n * @returns {Element}\n */\nfunction setupArrowNav(slideshowID) {\n  let arrowDiv \t\t\t= document.createElement(\"div\");\n  let arrowNext \t\t= document.createElement(\"div\");\n  let arrowPrevious = document.createElement(\"div\");\n\n  arrowDiv.className \t\t\t= \"arrow-controls\";\n  arrowNext.className \t\t= \"next-slide\";\n  arrowPrevious.className = \"previous-slide\";\n\n  arrowPrevious.innerHTML = \"<span onclick=\\\"previousSlide(\\'\" + slideshowID + \"\\')\\\">V</span>\";\n  arrowNext.innerHTML\t\t\t= \"<span onclick=\\\"nextSlide(\\'\" + slideshowID + \"\\', \" + true + \")\\\">V</span>\";\n\n  arrowDiv.appendChild(arrowPrevious);\n  arrowDiv.appendChild(arrowNext);\n  return arrowDiv;\n}\n\n/**\n * Progress to the next slide\n * @param slideshowID\n * @param usrCommand\n */\nfunction nextSlide(slideshowID, usrCommand) {\n  let slideshowObj = slideshowArray[slideshowID];\n  clearTimeout(slideshowObj.loop);\n\n  // Don't progress if the mouse is hovered over it unless overrided with usrCommand\n  if(!slideshowObj.hovered || usrCommand) {\n    // Fetch the required slide elements\n    let currentActive = ((slideshowObj.counter - 1) < 0) ? slideshowObj.numberOfSlides - 1 : slideshowObj.counter - 1;\n    let currentSlide = elem(\"#\" + slideshowObj.id + \"-\" + currentActive);\n    let newSlide = elem(\"#\" + slideshowObj.id + \"-\" + slideshowObj.counter);\n\n    transitionSlide(currentSlide, newSlide);\n    if(slideshowObj.control === \"dots\") {\n      updateDotNav(slideshowObj.id, currentActive, slideshowObj.counter);\n    }\n\n    slideshowObj.currentSlide = slideshowObj.counter;\n    slideshowObj.counter = (slideshowObj.counter < slideshowObj.numberOfSlides - 1) ? slideshowObj.counter + 1 : 0;\n  }\n\n  // Reset the timer to progress the slides\n  slideshowObj.loop = setTimeout(nextSlide, slideshowObj.interval, slideshowObj.id, false);\n}\n\n/**\n * Show the previous slide\n * @param slideshowID\n */\nfunction previousSlide(slideshowID) {\n  let slideshowObj = slideshowArray[slideshowID];\n  clearTimeout(slideshowObj.loop);\n\n  // Fetch the required slide elements\n  let currentCounter = (slideshowObj.counter - 1 < 0) ? slideshowObj.numberOfSlides - 1 : slideshowObj.counter - 1;\n  let previousCounter = (currentCounter - 1 < 0) ? slideshowObj.numberOfSlides - 1 : currentCounter - 1;\n  let currentSlide = elem(\"#\" + slideshowObj.id + \"-\" + currentCounter);\n  let newSlide = elem(\"#\" + slideshowObj.id + \"-\" + previousCounter);\n  transitionSlide(currentSlide, newSlide);\n\n  // Set the counter and reset the timer to progress the slides\n  slideshowObj.counter = previousCounter;\n  slideshowObj.counter = (slideshowObj.counter < slideshowObj.numberOfSlides - 1) ? slideshowObj.counter + 1 : 0;\n  slideshowObj.loop = setTimeout(nextSlide, slideshowObj.interval, slideshowObj.id, false);\n}\n\n/**\n * Show the requested slide\n * @param slideshowID\n * @param slideNumber\n */\nfunction gotoSlide(slideshowID, slideNumber) {\n  let slideshowObj = slideshowArray[slideshowID];\n  clearTimeout(slideshowObj.loop);\n\n  // Fetch slide numbers\n  let currentSlide = slideshowObj.currentSlide;\n  let newSlide = slideNumber;\n\n  // Update the slideshow counter to the new slide number\n  slideshowObj.counter = newSlide;\n  slideshowObj.currentSlide = newSlide;\n\n  // Transition the slide and update the nav dots\n  let cSlide = elem(\"#\" + slideshowObj.id + \"-\" + currentSlide);\n  let nSlide = elem(\"#\" + slideshowObj.id + \"-\" + newSlide);\n  transitionSlide(cSlide, nSlide);\n  updateDotNav(slideshowObj.id, currentSlide, newSlide);\n  slideshowObj.counter = (newSlide + 1 > slideshowObj.numberOfSlides - 1) ? 0 : newSlide + 1 ;\n}\n\n/**\n * Transition between the given slides\n * @param currentSlide\n * @param newSlide\n */\nfunction transitionSlide(currentSlide, newSlide) {\n  currentSlide.classList.remove(\"slide-visible\");\n  currentSlide.classList.add(\"slide-hidden\");\n  newSlide.classList.remove(\"slide-hidden\");\n  newSlide.classList.add(\"slide-visible\");\n}\n\nfunction updateDotNav(slideshowID, currentSlide, newSlide) {\n  let dot1 = elem(\"#\" + slideshowID + \"-dot-\" + currentSlide);\n  let dot2 = elem(\"#\" + slideshowID + \"-dot-\" + newSlide);\n\n  dot1.classList.remove(\"dot-active\");\n  dot2.classList.add(\"dot-active\");\n}\n\n////////////////////////////////////////////////////////////////\n\n\n/**\n * Log text to the console\n * @param {string} message\n * @param {string} style\n **/\nfunction consoleLog(message, style) {\n  switch(style) {\n    case \"info\":\n      console.log(\"%c\" + message, \"color: blue\");\n      break;\n    case \"success\":\n      console.log(\"%c\" + message, \"color: green\");\n      break;\n    case \"warning\":\n      console.log(\"%c\" + message, \"color: orange\");\n      break;\n    case \"danger\":\n      console.log(\"%c\" + message, \"color: red\");\n      break;\n    default:\n      console.log(message);\n  }\n}"]}